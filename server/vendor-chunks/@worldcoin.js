"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
exports.id = "vendor-chunks/@worldcoin";
exports.ids = ["vendor-chunks/@worldcoin"];
exports.modules = {

/***/ "(ssr)/./node_modules/@worldcoin/idkit-core/build/chunk-HZ2SQA5V.js":
/*!********************************************************************!*\
  !*** ./node_modules/@worldcoin/idkit-core/build/chunk-HZ2SQA5V.js ***!
  \********************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   encodeAction: () => (/* binding */ encodeAction),\n/* harmony export */   generateSignal: () => (/* binding */ generateSignal),\n/* harmony export */   hashToField: () => (/* binding */ hashToField),\n/* harmony export */   packAndEncode: () => (/* binding */ packAndEncode),\n/* harmony export */   solidityEncode: () => (/* binding */ solidityEncode)\n/* harmony export */ });\n/* harmony import */ var buffer_index_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! buffer/index.js */ \"(ssr)/./node_modules/buffer/index.js\");\n/* harmony import */ var ox__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ox */ \"(ssr)/./node_modules/ox/_esm/core/Bytes.js\");\n/* harmony import */ var ox__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ox */ \"(ssr)/./node_modules/ox/_esm/core/Hex.js\");\n/* harmony import */ var ox__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ox */ \"(ssr)/./node_modules/ox/_esm/core/AbiParameters.js\");\n/* harmony import */ var ox__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ox */ \"(ssr)/./node_modules/ox/_esm/core/Hash.js\");\n// src/lib/hashing.ts\n\n\nfunction hashToField(input) {\n  if (ox__WEBPACK_IMPORTED_MODULE_1__.validate(input) || ox__WEBPACK_IMPORTED_MODULE_2__.validate(input)) return hashEncodedBytes(input);\n  return hashString(input);\n}\nfunction packAndEncode(input) {\n  const [types, values] = input.reduce(\n    ([types2, values2], [type, value]) => {\n      types2.push(type);\n      values2.push(value);\n      return [types2, values2];\n    },\n    [[], []]\n  );\n  return hashEncodedBytes(ox__WEBPACK_IMPORTED_MODULE_3__.encodePacked(types, values));\n}\nfunction hashString(input) {\n  const bytesInput = buffer_index_js__WEBPACK_IMPORTED_MODULE_0__.Buffer.from(input);\n  return hashEncodedBytes(bytesInput);\n}\nfunction hashEncodedBytes(input) {\n  const hash = BigInt(ox__WEBPACK_IMPORTED_MODULE_4__.keccak256(input, { as: \"Hex\" })) >> 8n;\n  const rawDigest = hash.toString(16);\n  return { hash, digest: `0x${rawDigest.padStart(64, \"0\")}` };\n}\nvar solidityEncode = (types, values) => {\n  if (types.length !== values.length) {\n    throw new Error(\"Types and values arrays must have the same length.\");\n  }\n  return { types, values };\n};\nvar generateSignal = (signal) => {\n  if (!signal || typeof signal === \"string\") return hashToField(signal ?? \"\");\n  return packAndEncode(signal.types.map((type, index) => [type, signal.values[index]]));\n};\nvar encodeAction = (action) => {\n  if (!action) return \"\";\n  if (typeof action === \"string\") return action;\n  return action.types.map((type, index) => `${type}(${action.values[index]})`).join(\",\");\n};\n\n\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQHdvcmxkY29pbi9pZGtpdC1jb3JlL2J1aWxkL2NodW5rLUhaMlNRQTVWLmpzIiwibWFwcGluZ3MiOiI7Ozs7Ozs7Ozs7Ozs7QUFBQTtBQUN5QztBQUNZO0FBQ3JEO0FBQ0EsTUFBTSx3Q0FBYyxXQUFXLHdDQUFZO0FBQzNDO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxLQUFLO0FBQ0w7QUFDQTtBQUNBLDBCQUEwQiw0Q0FBMEI7QUFDcEQ7QUFDQTtBQUNBLHFCQUFxQixtREFBTTtBQUMzQjtBQUNBO0FBQ0E7QUFDQSxzQkFBc0IseUNBQWMsVUFBVSxXQUFXO0FBQ3pEO0FBQ0EsV0FBVyxtQkFBbUIsNEJBQTRCO0FBQzFEO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxXQUFXO0FBQ1g7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLDhDQUE4QyxLQUFLLEdBQUcscUJBQXFCO0FBQzNFOztBQVFFIiwic291cmNlcyI6WyIvVXNlcnMvREZTLUVkaXNvbi9Eb2N1bWVudHMvR2l0SHViL0hlbGxvV29ybGQvbm9kZV9tb2R1bGVzL0B3b3JsZGNvaW4vaWRraXQtY29yZS9idWlsZC9jaHVuay1IWjJTUUE1Vi5qcyJdLCJzb3VyY2VzQ29udGVudCI6WyIvLyBzcmMvbGliL2hhc2hpbmcudHNcbmltcG9ydCB7IEJ1ZmZlciB9IGZyb20gXCJidWZmZXIvaW5kZXguanNcIjtcbmltcG9ydCB7IEFiaVBhcmFtZXRlcnMsIEJ5dGVzLCBIZXgsIEhhc2ggfSBmcm9tIFwib3hcIjtcbmZ1bmN0aW9uIGhhc2hUb0ZpZWxkKGlucHV0KSB7XG4gIGlmIChCeXRlcy52YWxpZGF0ZShpbnB1dCkgfHwgSGV4LnZhbGlkYXRlKGlucHV0KSkgcmV0dXJuIGhhc2hFbmNvZGVkQnl0ZXMoaW5wdXQpO1xuICByZXR1cm4gaGFzaFN0cmluZyhpbnB1dCk7XG59XG5mdW5jdGlvbiBwYWNrQW5kRW5jb2RlKGlucHV0KSB7XG4gIGNvbnN0IFt0eXBlcywgdmFsdWVzXSA9IGlucHV0LnJlZHVjZShcbiAgICAoW3R5cGVzMiwgdmFsdWVzMl0sIFt0eXBlLCB2YWx1ZV0pID0+IHtcbiAgICAgIHR5cGVzMi5wdXNoKHR5cGUpO1xuICAgICAgdmFsdWVzMi5wdXNoKHZhbHVlKTtcbiAgICAgIHJldHVybiBbdHlwZXMyLCB2YWx1ZXMyXTtcbiAgICB9LFxuICAgIFtbXSwgW11dXG4gICk7XG4gIHJldHVybiBoYXNoRW5jb2RlZEJ5dGVzKEFiaVBhcmFtZXRlcnMuZW5jb2RlUGFja2VkKHR5cGVzLCB2YWx1ZXMpKTtcbn1cbmZ1bmN0aW9uIGhhc2hTdHJpbmcoaW5wdXQpIHtcbiAgY29uc3QgYnl0ZXNJbnB1dCA9IEJ1ZmZlci5mcm9tKGlucHV0KTtcbiAgcmV0dXJuIGhhc2hFbmNvZGVkQnl0ZXMoYnl0ZXNJbnB1dCk7XG59XG5mdW5jdGlvbiBoYXNoRW5jb2RlZEJ5dGVzKGlucHV0KSB7XG4gIGNvbnN0IGhhc2ggPSBCaWdJbnQoSGFzaC5rZWNjYWsyNTYoaW5wdXQsIHsgYXM6IFwiSGV4XCIgfSkpID4+IDhuO1xuICBjb25zdCByYXdEaWdlc3QgPSBoYXNoLnRvU3RyaW5nKDE2KTtcbiAgcmV0dXJuIHsgaGFzaCwgZGlnZXN0OiBgMHgke3Jhd0RpZ2VzdC5wYWRTdGFydCg2NCwgXCIwXCIpfWAgfTtcbn1cbnZhciBzb2xpZGl0eUVuY29kZSA9ICh0eXBlcywgdmFsdWVzKSA9PiB7XG4gIGlmICh0eXBlcy5sZW5ndGggIT09IHZhbHVlcy5sZW5ndGgpIHtcbiAgICB0aHJvdyBuZXcgRXJyb3IoXCJUeXBlcyBhbmQgdmFsdWVzIGFycmF5cyBtdXN0IGhhdmUgdGhlIHNhbWUgbGVuZ3RoLlwiKTtcbiAgfVxuICByZXR1cm4geyB0eXBlcywgdmFsdWVzIH07XG59O1xudmFyIGdlbmVyYXRlU2lnbmFsID0gKHNpZ25hbCkgPT4ge1xuICBpZiAoIXNpZ25hbCB8fCB0eXBlb2Ygc2lnbmFsID09PSBcInN0cmluZ1wiKSByZXR1cm4gaGFzaFRvRmllbGQoc2lnbmFsID8/IFwiXCIpO1xuICByZXR1cm4gcGFja0FuZEVuY29kZShzaWduYWwudHlwZXMubWFwKCh0eXBlLCBpbmRleCkgPT4gW3R5cGUsIHNpZ25hbC52YWx1ZXNbaW5kZXhdXSkpO1xufTtcbnZhciBlbmNvZGVBY3Rpb24gPSAoYWN0aW9uKSA9PiB7XG4gIGlmICghYWN0aW9uKSByZXR1cm4gXCJcIjtcbiAgaWYgKHR5cGVvZiBhY3Rpb24gPT09IFwic3RyaW5nXCIpIHJldHVybiBhY3Rpb247XG4gIHJldHVybiBhY3Rpb24udHlwZXMubWFwKCh0eXBlLCBpbmRleCkgPT4gYCR7dHlwZX0oJHthY3Rpb24udmFsdWVzW2luZGV4XX0pYCkuam9pbihcIixcIik7XG59O1xuXG5leHBvcnQge1xuICBoYXNoVG9GaWVsZCxcbiAgcGFja0FuZEVuY29kZSxcbiAgc29saWRpdHlFbmNvZGUsXG4gIGdlbmVyYXRlU2lnbmFsLFxuICBlbmNvZGVBY3Rpb25cbn07XG4iXSwibmFtZXMiOltdLCJpZ25vcmVMaXN0IjpbMF0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@worldcoin/idkit-core/build/chunk-HZ2SQA5V.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@worldcoin/idkit-core/build/index.js":
/*!***********************************************************!*\
  !*** ./node_modules/@worldcoin/idkit-core/build/index.js ***!
  \***********************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   AppErrorCodes: () => (/* binding */ AppErrorCodes),\n/* harmony export */   CredentialType: () => (/* binding */ CredentialType),\n/* harmony export */   DEFAULT_VERIFICATION_LEVEL: () => (/* binding */ DEFAULT_VERIFICATION_LEVEL),\n/* harmony export */   VerificationLevel: () => (/* binding */ VerificationLevel),\n/* harmony export */   VerificationState: () => (/* binding */ VerificationState),\n/* harmony export */   createWorldBridgeStore: () => (/* binding */ createWorldBridgeStore),\n/* harmony export */   useWorldBridgeStore: () => (/* binding */ useWorldBridgeStore),\n/* harmony export */   verification_level_to_credential_types: () => (/* binding */ verification_level_to_credential_types)\n/* harmony export */ });\n/* harmony import */ var _chunk_HZ2SQA5V_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./chunk-HZ2SQA5V.js */ \"(ssr)/./node_modules/@worldcoin/idkit-core/build/chunk-HZ2SQA5V.js\");\n/* harmony import */ var zustand__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! zustand */ \"(ssr)/./node_modules/zustand/esm/index.mjs\");\n/* harmony import */ var browser_or_node__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! browser-or-node */ \"(ssr)/./node_modules/browser-or-node/dist/index.mjs\");\n/* harmony import */ var buffer_index_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! buffer/index.js */ \"(ssr)/./node_modules/buffer/index.js\");\n\n\n// src/types/bridge.ts\nvar AppErrorCodes = /* @__PURE__ */ ((AppErrorCodes2) => {\n  AppErrorCodes2[\"ConnectionFailed\"] = \"connection_failed\";\n  AppErrorCodes2[\"VerificationRejected\"] = \"verification_rejected\";\n  AppErrorCodes2[\"MaxVerificationsReached\"] = \"max_verifications_reached\";\n  AppErrorCodes2[\"CredentialUnavailable\"] = \"credential_unavailable\";\n  AppErrorCodes2[\"MalformedRequest\"] = \"malformed_request\";\n  AppErrorCodes2[\"InvalidNetwork\"] = \"invalid_network\";\n  AppErrorCodes2[\"InclusionProofFailed\"] = \"inclusion_proof_failed\";\n  AppErrorCodes2[\"InclusionProofPending\"] = \"inclusion_proof_pending\";\n  AppErrorCodes2[\"UnexpectedResponse\"] = \"unexpected_response\";\n  AppErrorCodes2[\"FailedByHostApp\"] = \"failed_by_host_app\";\n  AppErrorCodes2[\"GenericError\"] = \"generic_error\";\n  return AppErrorCodes2;\n})(AppErrorCodes || {});\nvar VerificationState = /* @__PURE__ */ ((VerificationState2) => {\n  VerificationState2[\"PreparingClient\"] = \"loading_widget\";\n  VerificationState2[\"WaitingForConnection\"] = \"awaiting_connection\";\n  VerificationState2[\"WaitingForApp\"] = \"awaiting_app\";\n  VerificationState2[\"Confirmed\"] = \"confirmed\";\n  VerificationState2[\"Failed\"] = \"failed\";\n  return VerificationState2;\n})(VerificationState || {});\n\n// src/types/config.ts\nvar CredentialType = /* @__PURE__ */ ((CredentialType2) => {\n  CredentialType2[\"Orb\"] = \"orb\";\n  CredentialType2[\"SecureDocument\"] = \"secure_document\";\n  CredentialType2[\"Document\"] = \"document\";\n  CredentialType2[\"Device\"] = \"device\";\n  return CredentialType2;\n})(CredentialType || {});\nvar VerificationLevel = /* @__PURE__ */ ((VerificationLevel2) => {\n  VerificationLevel2[\"Orb\"] = \"orb\";\n  VerificationLevel2[\"SecureDocument\"] = \"secure_document\";\n  VerificationLevel2[\"Document\"] = \"document\";\n  VerificationLevel2[\"Device\"] = \"device\";\n  return VerificationLevel2;\n})(VerificationLevel || {});\n\n// src/bridge.ts\n\n\n// src/lib/validation.ts\nfunction validate_bridge_url(bridge_url, is_staging) {\n  try {\n    new URL(bridge_url);\n  } catch (e) {\n    return { valid: false, errors: [\"Failed to parse Bridge URL.\"] };\n  }\n  const test_url = new URL(bridge_url);\n  const errors = [];\n  if (is_staging && [\"localhost\", \"127.0.0.1\"].includes(test_url.hostname)) {\n    console.log(\"Using staging app_id with localhost bridge_url. Skipping validation.\");\n    return { valid: true };\n  }\n  if (test_url.protocol !== \"https:\") {\n    errors.push(\"Bridge URL must use HTTPS.\");\n  }\n  if (test_url.port) {\n    errors.push(\"Bridge URL must use the default port (443).\");\n  }\n  if (test_url.pathname !== \"/\") {\n    errors.push(\"Bridge URL must not have a path.\");\n  }\n  if (test_url.search) {\n    errors.push(\"Bridge URL must not have query parameters.\");\n  }\n  if (test_url.hash) {\n    errors.push(\"Bridge URL must not have a fragment.\");\n  }\n  if (!test_url.hostname.endsWith(\".worldcoin.org\") && !test_url.hostname.endsWith(\".toolsforhumanity.com\")) {\n    console.warn(\n      \"Bridge URL should be a subdomain of worldcoin.org or toolsforhumanity.com. The user's identity wallet may refuse to connect. This is a temporary measure and may be removed in the future.\"\n    );\n  }\n  if (errors.length) {\n    return { valid: false, errors };\n  }\n  return { valid: true };\n}\n\n// src/lib/platform.ts\n\nvar isReactNative = () => {\n  return typeof navigator !== \"undefined\" && navigator.product === \"ReactNative\";\n};\nvar isWeb = () => {\n  return browser_or_node__WEBPACK_IMPORTED_MODULE_1__.isBrowser;\n};\nvar getGlobalObject = () => {\n  if (typeof globalThis !== \"undefined\") return globalThis;\n  if (typeof self !== \"undefined\") return self;\n  if (typeof window !== \"undefined\") return window;\n  throw new Error(\"Unable to locate global object\");\n};\nvar getCrypto = () => {\n  const globalObj = getGlobalObject();\n  if (typeof globalObj.crypto !== \"undefined\") {\n    return globalObj.crypto;\n  }\n  throw new Error(\"Crypto API not available. For React Native, ensure polyfills are set up properly.\");\n};\n\n// src/lib/utils.ts\n\nvar DEFAULT_VERIFICATION_LEVEL = \"orb\" /* Orb */;\nvar buffer_encode = (buffer) => {\n  return buffer_index_js__WEBPACK_IMPORTED_MODULE_2__.Buffer.from(buffer).toString(\"base64\");\n};\nvar buffer_decode = (encoded) => {\n  return buffer_index_js__WEBPACK_IMPORTED_MODULE_2__.Buffer.from(encoded, \"base64\");\n};\nvar verification_level_to_credential_types = (verification_level) => {\n  switch (verification_level) {\n    case \"device\" /* Device */:\n      return [\"orb\" /* Orb */, \"device\" /* Device */];\n    case \"document\" /* Document */:\n      return [\"document\" /* Document */, \"secure_document\" /* SecureDocument */, \"orb\" /* Orb */];\n    case \"secure_document\" /* SecureDocument */:\n      return [\"secure_document\" /* SecureDocument */, \"orb\" /* Orb */];\n    case \"orb\" /* Orb */:\n      return [\"orb\" /* Orb */];\n    default:\n      throw new Error(`Unknown verification level: ${verification_level}`);\n  }\n};\nvar credential_type_to_verification_level = (credential_type) => {\n  switch (credential_type) {\n    case \"orb\" /* Orb */:\n      return \"orb\" /* Orb */;\n    case \"secure_document\" /* SecureDocument */:\n      return \"secure_document\" /* SecureDocument */;\n    case \"document\" /* Document */:\n      return \"document\" /* Document */;\n    case \"device\" /* Device */:\n      return \"device\" /* Device */;\n    default:\n      throw new Error(`Unknown credential_type: ${credential_type}`);\n  }\n};\n\n// src/lib/adapters/web-crypto-adapter.ts\nvar WebCryptoAdapter = class {\n  constructor() {\n    this.encoder = new TextEncoder();\n    this.decoder = new TextDecoder();\n  }\n  async generateKey() {\n    return {\n      iv: window.crypto.getRandomValues(new Uint8Array(12)),\n      key: await window.crypto.subtle.generateKey({ name: \"AES-GCM\", length: 256 }, true, [\"encrypt\", \"decrypt\"])\n    };\n  }\n  async exportKey(key) {\n    return buffer_encode(await window.crypto.subtle.exportKey(\"raw\", key));\n  }\n  async encryptRequest(key, iv, request) {\n    return {\n      iv: buffer_encode(iv),\n      payload: buffer_encode(\n        await window.crypto.subtle.encrypt({ name: \"AES-GCM\", iv }, key, this.encoder.encode(request))\n      )\n    };\n  }\n  async decryptResponse(key, iv, payload) {\n    return this.decoder.decode(\n      await window.crypto.subtle.decrypt({ name: \"AES-GCM\", iv }, key, buffer_decode(payload))\n    );\n  }\n};\n\n// src/lib/adapters/react-native-crypto-adapter.ts\nvar ReactNativeCryptoAdapter = class {\n  constructor() {\n    this.encoder = new TextEncoder();\n    this.decoder = new TextDecoder();\n  }\n  async generateKey() {\n    const crypto = getCrypto();\n    return {\n      iv: crypto.getRandomValues(new Uint8Array(12)),\n      key: await crypto.subtle.generateKey({ name: \"AES-GCM\", length: 256 }, true, [\"encrypt\", \"decrypt\"])\n    };\n  }\n  async exportKey(key) {\n    const crypto = getCrypto();\n    return buffer_encode(await crypto.subtle.exportKey(\"raw\", key));\n  }\n  async encryptRequest(key, iv, request) {\n    const crypto = getCrypto();\n    return {\n      iv: buffer_encode(iv),\n      payload: buffer_encode(\n        await crypto.subtle.encrypt({ name: \"AES-GCM\", iv }, key, this.encoder.encode(request))\n      )\n    };\n  }\n  async decryptResponse(key, iv, payload) {\n    const crypto = getCrypto();\n    return this.decoder.decode(await crypto.subtle.decrypt({ name: \"AES-GCM\", iv }, key, buffer_decode(payload)));\n  }\n};\n\n// src/lib/crypto.ts\nvar cryptoAdapterInstance = null;\nvar getCryptoAdapter = () => {\n  if (cryptoAdapterInstance) {\n    return cryptoAdapterInstance;\n  }\n  if (isWeb()) {\n    cryptoAdapterInstance = new WebCryptoAdapter();\n    return cryptoAdapterInstance;\n  }\n  if (isReactNative()) {\n    cryptoAdapterInstance = new ReactNativeCryptoAdapter();\n    return cryptoAdapterInstance;\n  }\n  throw new Error(\"Unsupported platform\");\n};\nvar generateKey = async () => {\n  return getCryptoAdapter().generateKey();\n};\nvar exportKey = async (key) => {\n  return getCryptoAdapter().exportKey(key);\n};\nvar encryptRequest = async (key, iv, request) => {\n  return getCryptoAdapter().encryptRequest(key, iv, request);\n};\nvar decryptResponse = async (key, iv, payload) => {\n  return getCryptoAdapter().decryptResponse(key, iv, payload);\n};\n\n// src/bridge.ts\nvar DEFAULT_BRIDGE_URL = \"https://bridge.worldcoin.org\";\nvar createStoreImplementation = (set, get) => ({\n  iv: null,\n  key: null,\n  result: null,\n  errorCode: null,\n  requestId: null,\n  connectorURI: null,\n  bridge_url: DEFAULT_BRIDGE_URL,\n  verificationState: \"loading_widget\" /* PreparingClient */,\n  createClient: async ({ bridge_url, app_id, verification_level, action_description, action, signal, partner }) => {\n    const { key, iv } = await generateKey();\n    if (bridge_url) {\n      const validation = validate_bridge_url(bridge_url, app_id.includes(\"staging\"));\n      if (!validation.valid) {\n        console.error(validation.errors.join(\"\\n\"));\n        set({ verificationState: \"failed\" /* Failed */ });\n        throw new Error(\"Invalid bridge_url. Please check the console for more details.\");\n      }\n    }\n    const res = await fetch(new URL(\"/request\", bridge_url ?? DEFAULT_BRIDGE_URL), {\n      method: \"POST\",\n      headers: { \"Content-Type\": \"application/json\" },\n      body: JSON.stringify(\n        await encryptRequest(\n          key,\n          iv,\n          JSON.stringify({\n            app_id,\n            action_description,\n            action: (0,_chunk_HZ2SQA5V_js__WEBPACK_IMPORTED_MODULE_0__.encodeAction)(action),\n            signal: (0,_chunk_HZ2SQA5V_js__WEBPACK_IMPORTED_MODULE_0__.generateSignal)(signal).digest,\n            credential_types: verification_level_to_credential_types(\n              verification_level ?? DEFAULT_VERIFICATION_LEVEL\n            ),\n            verification_level: verification_level ?? DEFAULT_VERIFICATION_LEVEL\n          })\n        )\n      )\n    });\n    if (!res.ok) {\n      set({ verificationState: \"failed\" /* Failed */ });\n      throw new Error(\"Failed to create client\");\n    }\n    const { request_id } = await res.json();\n    set({\n      iv,\n      key,\n      requestId: request_id,\n      bridge_url: bridge_url ?? DEFAULT_BRIDGE_URL,\n      verificationState: \"awaiting_connection\" /* WaitingForConnection */,\n      connectorURI: `https://world.org/verify?t=wld&i=${request_id}&k=${encodeURIComponent(\n        await exportKey(key)\n      )}${bridge_url && bridge_url !== DEFAULT_BRIDGE_URL ? `&b=${encodeURIComponent(bridge_url)}` : \"\"}${partner ? `&partner=${encodeURIComponent(true)}` : \"\"}`\n    });\n  },\n  pollForUpdates: async () => {\n    const key = get().key;\n    if (!key) throw new Error(\"No keypair found. Please call `createClient` first.\");\n    const res = await fetch(new URL(`/response/${get().requestId}`, get().bridge_url));\n    if (!res.ok) {\n      return set({\n        errorCode: \"connection_failed\" /* ConnectionFailed */,\n        verificationState: \"failed\" /* Failed */\n      });\n    }\n    const { response, status } = await res.json();\n    if (status != \"completed\" /* Completed */) {\n      return set({\n        verificationState: status == \"retrieved\" /* Retrieved */ ? \"awaiting_app\" /* WaitingForApp */ : \"awaiting_connection\" /* WaitingForConnection */\n      });\n    }\n    let result = JSON.parse(\n      await decryptResponse(key, buffer_decode(response.iv), response.payload)\n    );\n    if (\"error_code\" in result) {\n      return set({\n        errorCode: result.error_code,\n        verificationState: \"failed\" /* Failed */\n      });\n    }\n    if (\"credential_type\" in result) {\n      result = {\n        verification_level: credential_type_to_verification_level(result.credential_type),\n        ...result\n      };\n    }\n    set({\n      result,\n      key: null,\n      requestId: null,\n      connectorURI: null,\n      verificationState: \"confirmed\" /* Confirmed */\n    });\n  },\n  reset: () => {\n    set({\n      iv: null,\n      key: null,\n      result: null,\n      errorCode: null,\n      requestId: null,\n      connectorURI: null,\n      verificationState: \"loading_widget\" /* PreparingClient */\n    });\n  }\n});\nvar useWorldBridgeStore = (0,zustand__WEBPACK_IMPORTED_MODULE_3__.create)(createStoreImplementation);\nvar createWorldBridgeStore = () => (0,zustand__WEBPACK_IMPORTED_MODULE_3__.create)(createStoreImplementation);\n\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@worldcoin/idkit-core/build/index.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@worldcoin/idkit-core/build/lib/backend.js":
/*!*****************************************************************!*\
  !*** ./node_modules/@worldcoin/idkit-core/build/lib/backend.js ***!
  \*****************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   verifyCloudProof: () => (/* binding */ verifyCloudProof)\n/* harmony export */ });\n/* harmony import */ var _chunk_HZ2SQA5V_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../chunk-HZ2SQA5V.js */ \"(ssr)/./node_modules/@worldcoin/idkit-core/build/chunk-HZ2SQA5V.js\");\n/* harmony import */ var browser_or_node__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! browser-or-node */ \"(ssr)/./node_modules/browser-or-node/dist/index.mjs\");\n\n\n// src/lib/backend.ts\n\nasync function verifyCloudProof(proof, app_id, action, signal, endpoint, headers) {\n  if (browser_or_node__WEBPACK_IMPORTED_MODULE_1__.isBrowser) {\n    throw new Error(\"verifyCloudProof can only be used in the backend.\");\n  }\n  const response = await fetch(endpoint ?? `https://developer.worldcoin.org/api/v2/verify/${app_id}`, {\n    method: \"POST\",\n    headers: {\n      ...headers ?? {},\n      \"Content-Type\": \"application/json\"\n    },\n    body: JSON.stringify({\n      ...proof,\n      action,\n      signal_hash: (0,_chunk_HZ2SQA5V_js__WEBPACK_IMPORTED_MODULE_0__.hashToField)(signal ?? \"\").digest\n    })\n  });\n  if (response.ok) {\n    return { success: true };\n  } else {\n    return { success: false, ...await response.json() };\n  }\n}\n\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQHdvcmxkY29pbi9pZGtpdC1jb3JlL2J1aWxkL2xpYi9iYWNrZW5kLmpzIiwibWFwcGluZ3MiOiI7Ozs7OztBQUU4Qjs7QUFFOUI7QUFDNEM7QUFDNUM7QUFDQSxNQUFNLHNEQUFTO0FBQ2Y7QUFDQTtBQUNBLDRGQUE0RixPQUFPO0FBQ25HO0FBQ0E7QUFDQSxzQkFBc0I7QUFDdEI7QUFDQSxLQUFLO0FBQ0w7QUFDQTtBQUNBO0FBQ0EsbUJBQW1CLCtEQUFXO0FBQzlCLEtBQUs7QUFDTCxHQUFHO0FBQ0g7QUFDQSxhQUFhO0FBQ2IsSUFBSTtBQUNKLGFBQWE7QUFDYjtBQUNBO0FBR0UiLCJzb3VyY2VzIjpbIi9Vc2Vycy9ERlMtRWRpc29uL0RvY3VtZW50cy9HaXRIdWIvSGVsbG9Xb3JsZC9ub2RlX21vZHVsZXMvQHdvcmxkY29pbi9pZGtpdC1jb3JlL2J1aWxkL2xpYi9iYWNrZW5kLmpzIl0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7XG4gIGhhc2hUb0ZpZWxkXG59IGZyb20gXCIuLi9jaHVuay1IWjJTUUE1Vi5qc1wiO1xuXG4vLyBzcmMvbGliL2JhY2tlbmQudHNcbmltcG9ydCB7IGlzQnJvd3NlciB9IGZyb20gXCJicm93c2VyLW9yLW5vZGVcIjtcbmFzeW5jIGZ1bmN0aW9uIHZlcmlmeUNsb3VkUHJvb2YocHJvb2YsIGFwcF9pZCwgYWN0aW9uLCBzaWduYWwsIGVuZHBvaW50LCBoZWFkZXJzKSB7XG4gIGlmIChpc0Jyb3dzZXIpIHtcbiAgICB0aHJvdyBuZXcgRXJyb3IoXCJ2ZXJpZnlDbG91ZFByb29mIGNhbiBvbmx5IGJlIHVzZWQgaW4gdGhlIGJhY2tlbmQuXCIpO1xuICB9XG4gIGNvbnN0IHJlc3BvbnNlID0gYXdhaXQgZmV0Y2goZW5kcG9pbnQgPz8gYGh0dHBzOi8vZGV2ZWxvcGVyLndvcmxkY29pbi5vcmcvYXBpL3YyL3ZlcmlmeS8ke2FwcF9pZH1gLCB7XG4gICAgbWV0aG9kOiBcIlBPU1RcIixcbiAgICBoZWFkZXJzOiB7XG4gICAgICAuLi5oZWFkZXJzID8/IHt9LFxuICAgICAgXCJDb250ZW50LVR5cGVcIjogXCJhcHBsaWNhdGlvbi9qc29uXCJcbiAgICB9LFxuICAgIGJvZHk6IEpTT04uc3RyaW5naWZ5KHtcbiAgICAgIC4uLnByb29mLFxuICAgICAgYWN0aW9uLFxuICAgICAgc2lnbmFsX2hhc2g6IGhhc2hUb0ZpZWxkKHNpZ25hbCA/PyBcIlwiKS5kaWdlc3RcbiAgICB9KVxuICB9KTtcbiAgaWYgKHJlc3BvbnNlLm9rKSB7XG4gICAgcmV0dXJuIHsgc3VjY2VzczogdHJ1ZSB9O1xuICB9IGVsc2Uge1xuICAgIHJldHVybiB7IHN1Y2Nlc3M6IGZhbHNlLCAuLi5hd2FpdCByZXNwb25zZS5qc29uKCkgfTtcbiAgfVxufVxuZXhwb3J0IHtcbiAgdmVyaWZ5Q2xvdWRQcm9vZlxufTtcbiJdLCJuYW1lcyI6W10sImlnbm9yZUxpc3QiOlswXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@worldcoin/idkit-core/build/lib/backend.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@worldcoin/idkit-core/build/lib/hashing.js":
/*!*****************************************************************!*\
  !*** ./node_modules/@worldcoin/idkit-core/build/lib/hashing.js ***!
  \*****************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   encodeAction: () => (/* reexport safe */ _chunk_HZ2SQA5V_js__WEBPACK_IMPORTED_MODULE_0__.encodeAction),\n/* harmony export */   generateSignal: () => (/* reexport safe */ _chunk_HZ2SQA5V_js__WEBPACK_IMPORTED_MODULE_0__.generateSignal),\n/* harmony export */   hashToField: () => (/* reexport safe */ _chunk_HZ2SQA5V_js__WEBPACK_IMPORTED_MODULE_0__.hashToField),\n/* harmony export */   packAndEncode: () => (/* reexport safe */ _chunk_HZ2SQA5V_js__WEBPACK_IMPORTED_MODULE_0__.packAndEncode),\n/* harmony export */   solidityEncode: () => (/* reexport safe */ _chunk_HZ2SQA5V_js__WEBPACK_IMPORTED_MODULE_0__.solidityEncode)\n/* harmony export */ });\n/* harmony import */ var _chunk_HZ2SQA5V_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../chunk-HZ2SQA5V.js */ \"(ssr)/./node_modules/@worldcoin/idkit-core/build/chunk-HZ2SQA5V.js\");\n\n\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQHdvcmxkY29pbi9pZGtpdC1jb3JlL2J1aWxkL2xpYi9oYXNoaW5nLmpzIiwibWFwcGluZ3MiOiI7Ozs7Ozs7OztBQU04QjtBQU81QiIsInNvdXJjZXMiOlsiL1VzZXJzL0RGUy1FZGlzb24vRG9jdW1lbnRzL0dpdEh1Yi9IZWxsb1dvcmxkL25vZGVfbW9kdWxlcy9Ad29ybGRjb2luL2lka2l0LWNvcmUvYnVpbGQvbGliL2hhc2hpbmcuanMiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHtcbiAgZW5jb2RlQWN0aW9uLFxuICBnZW5lcmF0ZVNpZ25hbCxcbiAgaGFzaFRvRmllbGQsXG4gIHBhY2tBbmRFbmNvZGUsXG4gIHNvbGlkaXR5RW5jb2RlXG59IGZyb20gXCIuLi9jaHVuay1IWjJTUUE1Vi5qc1wiO1xuZXhwb3J0IHtcbiAgZW5jb2RlQWN0aW9uLFxuICBnZW5lcmF0ZVNpZ25hbCxcbiAgaGFzaFRvRmllbGQsXG4gIHBhY2tBbmRFbmNvZGUsXG4gIHNvbGlkaXR5RW5jb2RlXG59O1xuIl0sIm5hbWVzIjpbXSwiaWdub3JlTGlzdCI6WzBdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@worldcoin/idkit-core/build/lib/hashing.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@worldcoin/minikit-js/build/chunk-DKXMTG56.js":
/*!********************************************************************!*\
  !*** ./node_modules/@worldcoin/minikit-js/build/chunk-DKXMTG56.js ***!
  \********************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   AppErrorCodes: () => (/* reexport safe */ _worldcoin_idkit_core__WEBPACK_IMPORTED_MODULE_0__.AppErrorCodes),\n/* harmony export */   Command: () => (/* binding */ Command),\n/* harmony export */   GetPermissionsErrorCodes: () => (/* binding */ GetPermissionsErrorCodes),\n/* harmony export */   GetPermissionsErrorMessage: () => (/* binding */ GetPermissionsErrorMessage),\n/* harmony export */   MicrophoneErrorCodes: () => (/* binding */ MicrophoneErrorCodes),\n/* harmony export */   MicrophoneErrorMessage: () => (/* binding */ MicrophoneErrorMessage),\n/* harmony export */   MiniKit: () => (/* binding */ MiniKit),\n/* harmony export */   MiniKitInstallErrorCodes: () => (/* binding */ MiniKitInstallErrorCodes),\n/* harmony export */   MiniKitInstallErrorMessage: () => (/* binding */ MiniKitInstallErrorMessage),\n/* harmony export */   Network: () => (/* binding */ Network),\n/* harmony export */   PaymentErrorCodes: () => (/* binding */ PaymentErrorCodes),\n/* harmony export */   PaymentErrorMessage: () => (/* binding */ PaymentErrorMessage),\n/* harmony export */   PaymentValidationErrors: () => (/* binding */ PaymentValidationErrors),\n/* harmony export */   Permission: () => (/* binding */ Permission),\n/* harmony export */   RequestPermissionErrorCodes: () => (/* binding */ RequestPermissionErrorCodes),\n/* harmony export */   RequestPermissionErrorMessage: () => (/* binding */ RequestPermissionErrorMessage),\n/* harmony export */   ResponseEvent: () => (/* binding */ ResponseEvent),\n/* harmony export */   SendHapticFeedbackErrorCodes: () => (/* binding */ SendHapticFeedbackErrorCodes),\n/* harmony export */   SendHapticFeedbackErrorMessage: () => (/* binding */ SendHapticFeedbackErrorMessage),\n/* harmony export */   SendTransactionErrorCodes: () => (/* binding */ SendTransactionErrorCodes),\n/* harmony export */   SendTransactionErrorMessage: () => (/* binding */ SendTransactionErrorMessage),\n/* harmony export */   ShareContactsErrorCodes: () => (/* binding */ ShareContactsErrorCodes),\n/* harmony export */   ShareContactsErrorMessage: () => (/* binding */ ShareContactsErrorMessage),\n/* harmony export */   ShareFilesErrorCodes: () => (/* binding */ ShareFilesErrorCodes),\n/* harmony export */   ShareFilesErrorMessage: () => (/* binding */ ShareFilesErrorMessage),\n/* harmony export */   SignMessageErrorCodes: () => (/* binding */ SignMessageErrorCodes),\n/* harmony export */   SignMessageErrorMessage: () => (/* binding */ SignMessageErrorMessage),\n/* harmony export */   SignTypedDataErrorCodes: () => (/* binding */ SignTypedDataErrorCodes),\n/* harmony export */   SignTypedDataErrorMessage: () => (/* binding */ SignTypedDataErrorMessage),\n/* harmony export */   TokenDecimals: () => (/* binding */ TokenDecimals),\n/* harmony export */   Tokens: () => (/* binding */ Tokens),\n/* harmony export */   VerificationErrorMessage: () => (/* binding */ VerificationErrorMessage),\n/* harmony export */   WalletAuthErrorCodes: () => (/* binding */ WalletAuthErrorCodes),\n/* harmony export */   WalletAuthErrorMessage: () => (/* binding */ WalletAuthErrorMessage),\n/* harmony export */   parseSiweMessage: () => (/* binding */ parseSiweMessage),\n/* harmony export */   tokenToDecimals: () => (/* binding */ tokenToDecimals),\n/* harmony export */   verifySiweMessage: () => (/* binding */ verifySiweMessage)\n/* harmony export */ });\n/* harmony import */ var _worldcoin_idkit_core__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @worldcoin/idkit-core */ \"(ssr)/./node_modules/@worldcoin/idkit-core/build/index.js\");\n/* harmony import */ var viem__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! viem */ \"(ssr)/./node_modules/viem/_esm/clients/createPublicClient.js\");\n/* harmony import */ var viem__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! viem */ \"(ssr)/./node_modules/viem/_esm/clients/transports/http.js\");\n/* harmony import */ var viem__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! viem */ \"(ssr)/./node_modules/viem/_esm/utils/signature/hashMessage.js\");\n/* harmony import */ var viem__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! viem */ \"(ssr)/./node_modules/viem/_esm/actions/getContract.js\");\n/* harmony import */ var viem__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! viem */ \"(ssr)/./node_modules/viem/_esm/utils/signature/recoverAddress.js\");\n/* harmony import */ var viem_chains__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! viem/chains */ \"(ssr)/./node_modules/viem/_esm/chains/definitions/worldchain.js\");\n/* harmony import */ var _worldcoin_idkit_core_hashing__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! @worldcoin/idkit-core/hashing */ \"(ssr)/./node_modules/@worldcoin/idkit-core/build/lib/hashing.js\");\n/* harmony import */ var viem__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! viem */ \"(ssr)/./node_modules/viem/_esm/utils/abi/decodeAbiParameters.js\");\n/* harmony import */ var viem__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! viem */ \"(ssr)/./node_modules/viem/_esm/utils/abi/encodeAbiParameters.js\");\n// types/errors.ts\n\n\nvar VerificationErrorMessage = {\n  [_worldcoin_idkit_core__WEBPACK_IMPORTED_MODULE_0__.AppErrorCodes.VerificationRejected]: \"You've cancelled the request in World App.\",\n  [_worldcoin_idkit_core__WEBPACK_IMPORTED_MODULE_0__.AppErrorCodes.MaxVerificationsReached]: \"You have already verified the maximum number of times for this action.\",\n  [_worldcoin_idkit_core__WEBPACK_IMPORTED_MODULE_0__.AppErrorCodes.CredentialUnavailable]: \"It seems you do not have the verification level required by this app.\",\n  [_worldcoin_idkit_core__WEBPACK_IMPORTED_MODULE_0__.AppErrorCodes.MalformedRequest]: \"There was a problem with this request. Please try again or contact the app owner.\",\n  [_worldcoin_idkit_core__WEBPACK_IMPORTED_MODULE_0__.AppErrorCodes.InvalidNetwork]: \"Invalid network. If you are the app owner, visit docs.worldcoin.org/test for details.\",\n  [_worldcoin_idkit_core__WEBPACK_IMPORTED_MODULE_0__.AppErrorCodes.InclusionProofFailed]: \"There was an issue fetching your credential. Please try again.\",\n  [_worldcoin_idkit_core__WEBPACK_IMPORTED_MODULE_0__.AppErrorCodes.InclusionProofPending]: \"Your identity is still being registered. Please wait a few minutes and try again.\",\n  [_worldcoin_idkit_core__WEBPACK_IMPORTED_MODULE_0__.AppErrorCodes.UnexpectedResponse]: \"Unexpected response from your wallet. Please try again.\",\n  [_worldcoin_idkit_core__WEBPACK_IMPORTED_MODULE_0__.AppErrorCodes.FailedByHostApp]: \"Verification failed by the app. Please contact the app owner for details.\",\n  [_worldcoin_idkit_core__WEBPACK_IMPORTED_MODULE_0__.AppErrorCodes.GenericError]: \"Something unexpected went wrong. Please try again.\",\n  [_worldcoin_idkit_core__WEBPACK_IMPORTED_MODULE_0__.AppErrorCodes.ConnectionFailed]: \"Connection to your wallet failed. Please try again.\"\n};\nvar PaymentErrorCodes = /* @__PURE__ */ ((PaymentErrorCodes2) => {\n  PaymentErrorCodes2[\"InputError\"] = \"input_error\";\n  PaymentErrorCodes2[\"UserRejected\"] = \"user_rejected\";\n  PaymentErrorCodes2[\"PaymentRejected\"] = \"payment_rejected\";\n  PaymentErrorCodes2[\"InvalidReceiver\"] = \"invalid_receiver\";\n  PaymentErrorCodes2[\"InsufficientBalance\"] = \"insufficient_balance\";\n  PaymentErrorCodes2[\"TransactionFailed\"] = \"transaction_failed\";\n  PaymentErrorCodes2[\"GenericError\"] = \"generic_error\";\n  PaymentErrorCodes2[\"UserBlocked\"] = \"user_blocked\";\n  return PaymentErrorCodes2;\n})(PaymentErrorCodes || {});\nvar PaymentErrorMessage = {\n  [\"input_error\" /* InputError */]: \"There was a problem with this request. Please try again or contact the app owner.\",\n  [\"user_rejected\" /* UserRejected */]: \"You have cancelled the payment in World App.\",\n  [\"payment_rejected\" /* PaymentRejected */]: \"You've cancelled the payment in World App.\",\n  [\"invalid_receiver\" /* InvalidReceiver */]: \"The receiver address is invalid. Please contact the app owner.\",\n  [\"insufficient_balance\" /* InsufficientBalance */]: \"You do not have enough balance to complete this transaction.\",\n  [\"transaction_failed\" /* TransactionFailed */]: \"The transaction failed. Please try again.\",\n  [\"generic_error\" /* GenericError */]: \"Something unexpected went wrong. Please try again.\",\n  [\"user_blocked\" /* UserBlocked */]: \"User's region is blocked from making payments.\"\n};\nvar PaymentValidationErrors = /* @__PURE__ */ ((PaymentValidationErrors2) => {\n  PaymentValidationErrors2[\"MalformedRequest\"] = \"There was a problem with this request. Please try again or contact the app owner.\";\n  PaymentValidationErrors2[\"InvalidTokenAddress\"] = \"The token address is invalid. Please contact the app owner.\";\n  PaymentValidationErrors2[\"InvalidAppId\"] = \"The app ID is invalid. Please contact the app owner.\";\n  PaymentValidationErrors2[\"DuplicateReference\"] = \"This reference ID already exists please generate a new one and try again.\";\n  return PaymentValidationErrors2;\n})(PaymentValidationErrors || {});\nvar WalletAuthErrorCodes = /* @__PURE__ */ ((WalletAuthErrorCodes2) => {\n  WalletAuthErrorCodes2[\"MalformedRequest\"] = \"malformed_request\";\n  WalletAuthErrorCodes2[\"UserRejected\"] = \"user_rejected\";\n  WalletAuthErrorCodes2[\"GenericError\"] = \"generic_error\";\n  return WalletAuthErrorCodes2;\n})(WalletAuthErrorCodes || {});\nvar WalletAuthErrorMessage = {\n  [\"malformed_request\" /* MalformedRequest */]: \"Provided parameters in the request are invalid.\",\n  [\"user_rejected\" /* UserRejected */]: \"User rejected the request.\",\n  [\"generic_error\" /* GenericError */]: \"Something unexpected went wrong.\"\n};\nvar SendTransactionErrorCodes = /* @__PURE__ */ ((SendTransactionErrorCodes2) => {\n  SendTransactionErrorCodes2[\"InvalidOperation\"] = \"invalid_operation\";\n  SendTransactionErrorCodes2[\"UserRejected\"] = \"user_rejected\";\n  SendTransactionErrorCodes2[\"InputError\"] = \"input_error\";\n  SendTransactionErrorCodes2[\"SimulationFailed\"] = \"simulation_failed\";\n  SendTransactionErrorCodes2[\"TransactionFailed\"] = \"transaction_failed\";\n  SendTransactionErrorCodes2[\"GenericError\"] = \"generic_error\";\n  SendTransactionErrorCodes2[\"DisallowedOperation\"] = \"disallowed_operation\";\n  SendTransactionErrorCodes2[\"ValidationError\"] = \"validation_error\";\n  SendTransactionErrorCodes2[\"InvalidContract\"] = \"invalid_contract\";\n  SendTransactionErrorCodes2[\"MaliciousOperation\"] = \"malicious_operation\";\n  SendTransactionErrorCodes2[\"DailyTxLimitReached\"] = \"daily_tx_limit_reached\";\n  SendTransactionErrorCodes2[\"PermittedAmountExceedsSlippage\"] = \"permitted_amount_exceeds_slippage\";\n  SendTransactionErrorCodes2[\"PermittedAmountNotFound\"] = \"permitted_amount_not_found\";\n  return SendTransactionErrorCodes2;\n})(SendTransactionErrorCodes || {});\nvar SendTransactionErrorMessage = {\n  [\"invalid_operation\" /* InvalidOperation */]: \"Transaction included an operation that was invalid\",\n  [\"user_rejected\" /* UserRejected */]: \"User rejected the request.\",\n  [\"input_error\" /* InputError */]: \"Invalid payload.\",\n  [\"simulation_failed\" /* SimulationFailed */]: \"The transaction simulation failed.\",\n  [\"validation_error\" /* ValidationError */]: \"The transaction validation failed. Please try again.\",\n  [\"transaction_failed\" /* TransactionFailed */]: \"The transaction failed. Please try again later.\",\n  [\"generic_error\" /* GenericError */]: \"Something unexpected went wrong. Please try again.\",\n  [\"disallowed_operation\" /* DisallowedOperation */]: \"The operation requested is not allowed. Please refer to the docs.\",\n  [\"invalid_contract\" /* InvalidContract */]: \"The contract address is not allowed for your application. Please check your developer portal configurations\",\n  [\"malicious_operation\" /* MaliciousOperation */]: \"The operation requested is considered malicious.\",\n  [\"daily_tx_limit_reached\" /* DailyTxLimitReached */]: \"Daily transaction limit reached. Max 100 transactions per day. Wait until the next day.\",\n  [\"permitted_amount_exceeds_slippage\" /* PermittedAmountExceedsSlippage */]: \"Permitted amount exceeds slippage. You must spend at least 90% of the permitted amount.\",\n  [\"permitted_amount_not_found\" /* PermittedAmountNotFound */]: \"Permitted amount not found in permit2 payload.\"\n};\nvar SignMessageErrorCodes = /* @__PURE__ */ ((SignMessageErrorCodes2) => {\n  SignMessageErrorCodes2[\"InvalidMessage\"] = \"invalid_message\";\n  SignMessageErrorCodes2[\"UserRejected\"] = \"user_rejected\";\n  SignMessageErrorCodes2[\"GenericError\"] = \"generic_error\";\n  return SignMessageErrorCodes2;\n})(SignMessageErrorCodes || {});\nvar SignMessageErrorMessage = {\n  [\"invalid_message\" /* InvalidMessage */]: \"Invalid message requested\",\n  [\"user_rejected\" /* UserRejected */]: \"User rejected the request.\",\n  [\"generic_error\" /* GenericError */]: \"Something unexpected went wrong.\"\n};\nvar SignTypedDataErrorCodes = /* @__PURE__ */ ((SignTypedDataErrorCodes2) => {\n  SignTypedDataErrorCodes2[\"InvalidOperation\"] = \"invalid_operation\";\n  SignTypedDataErrorCodes2[\"UserRejected\"] = \"user_rejected\";\n  SignTypedDataErrorCodes2[\"InputError\"] = \"input_error\";\n  SignTypedDataErrorCodes2[\"SimulationFailed\"] = \"simulation_failed\";\n  SignTypedDataErrorCodes2[\"GenericError\"] = \"generic_error\";\n  SignTypedDataErrorCodes2[\"DisallowedOperation\"] = \"disallowed_operation\";\n  SignTypedDataErrorCodes2[\"InvalidContract\"] = \"invalid_contract\";\n  SignTypedDataErrorCodes2[\"MaliciousOperation\"] = \"malicious_operation\";\n  return SignTypedDataErrorCodes2;\n})(SignTypedDataErrorCodes || {});\nvar SignTypedDataErrorMessage = {\n  [\"invalid_operation\" /* InvalidOperation */]: \"Transaction included an operation that was invalid\",\n  [\"user_rejected\" /* UserRejected */]: \"User rejected the request.\",\n  [\"input_error\" /* InputError */]: \"Invalid payload.\",\n  [\"simulation_failed\" /* SimulationFailed */]: \"The transaction simulation failed.\",\n  [\"generic_error\" /* GenericError */]: \"Something unexpected went wrong. Please try again.\",\n  [\"disallowed_operation\" /* DisallowedOperation */]: \"The operation requested is not allowed. Please refer to the docs.\",\n  [\"invalid_contract\" /* InvalidContract */]: \"The contract address is not allowed for your application. Please check your developer portal configurations\",\n  [\"malicious_operation\" /* MaliciousOperation */]: \"The operation requested is considered malicious.\"\n};\nvar MiniKitInstallErrorCodes = /* @__PURE__ */ ((MiniKitInstallErrorCodes2) => {\n  MiniKitInstallErrorCodes2[\"Unknown\"] = \"unknown\";\n  MiniKitInstallErrorCodes2[\"AlreadyInstalled\"] = \"already_installed\";\n  MiniKitInstallErrorCodes2[\"OutsideOfWorldApp\"] = \"outside_of_worldapp\";\n  MiniKitInstallErrorCodes2[\"NotOnClient\"] = \"not_on_client\";\n  MiniKitInstallErrorCodes2[\"AppOutOfDate\"] = \"app_out_of_date\";\n  return MiniKitInstallErrorCodes2;\n})(MiniKitInstallErrorCodes || {});\nvar MiniKitInstallErrorMessage = {\n  [\"unknown\" /* Unknown */]: \"Failed to install MiniKit.\",\n  [\"already_installed\" /* AlreadyInstalled */]: \"MiniKit is already installed.\",\n  [\"outside_of_worldapp\" /* OutsideOfWorldApp */]: \"MiniApp launched outside of WorldApp.\",\n  [\"not_on_client\" /* NotOnClient */]: \"Window object is not available.\",\n  [\"app_out_of_date\" /* AppOutOfDate */]: \"WorldApp is out of date. Please update the app.\"\n};\nvar ShareContactsErrorCodes = /* @__PURE__ */ ((ShareContactsErrorCodes2) => {\n  ShareContactsErrorCodes2[\"UserRejected\"] = \"user_rejected\";\n  ShareContactsErrorCodes2[\"GenericError\"] = \"generic_error\";\n  return ShareContactsErrorCodes2;\n})(ShareContactsErrorCodes || {});\nvar ShareContactsErrorMessage = {\n  [\"user_rejected\" /* UserRejected */]: \"User rejected the request.\",\n  [\"generic_error\" /* GenericError */]: \"Something unexpected went wrong.\"\n};\nvar RequestPermissionErrorCodes = /* @__PURE__ */ ((RequestPermissionErrorCodes2) => {\n  RequestPermissionErrorCodes2[\"UserRejected\"] = \"user_rejected\";\n  RequestPermissionErrorCodes2[\"GenericError\"] = \"generic_error\";\n  RequestPermissionErrorCodes2[\"AlreadyRequested\"] = \"already_requested\";\n  RequestPermissionErrorCodes2[\"PermissionDisabled\"] = \"permission_disabled\";\n  RequestPermissionErrorCodes2[\"AlreadyGranted\"] = \"already_granted\";\n  RequestPermissionErrorCodes2[\"UnsupportedPermission\"] = \"unsupported_permission\";\n  return RequestPermissionErrorCodes2;\n})(RequestPermissionErrorCodes || {});\nvar RequestPermissionErrorMessage = {\n  [\"user_rejected\" /* UserRejected */]: \"User declined sharing contacts\",\n  [\"generic_error\" /* GenericError */]: \"Request failed for unknown reason.\",\n  [\"already_requested\" /* AlreadyRequested */]: \"User has already declined turning on notifications once\",\n  [\"permission_disabled\" /* PermissionDisabled */]: \"User does not have this permission enabled in World App\",\n  [\"already_granted\" /* AlreadyGranted */]: \"If the user has already granted this mini app permission\",\n  [\"unsupported_permission\" /* UnsupportedPermission */]: \"The permission requested is not supported by this mini app\"\n};\nvar GetPermissionsErrorCodes = /* @__PURE__ */ ((GetPermissionsErrorCodes2) => {\n  GetPermissionsErrorCodes2[\"GenericError\"] = \"generic_error\";\n  return GetPermissionsErrorCodes2;\n})(GetPermissionsErrorCodes || {});\nvar GetPermissionsErrorMessage = {\n  [\"generic_error\" /* GenericError */]: \"Something unexpected went wrong. Please try again.\"\n};\nvar SendHapticFeedbackErrorCodes = /* @__PURE__ */ ((SendHapticFeedbackErrorCodes2) => {\n  SendHapticFeedbackErrorCodes2[\"GenericError\"] = \"generic_error\";\n  SendHapticFeedbackErrorCodes2[\"UserRejected\"] = \"user_rejected\";\n  return SendHapticFeedbackErrorCodes2;\n})(SendHapticFeedbackErrorCodes || {});\nvar SendHapticFeedbackErrorMessage = {\n  [\"generic_error\" /* GenericError */]: \"Something unexpected went wrong.\",\n  [\"user_rejected\" /* UserRejected */]: \"User rejected the request.\"\n};\nvar ShareFilesErrorCodes = /* @__PURE__ */ ((ShareFilesErrorCodes2) => {\n  ShareFilesErrorCodes2[\"UserRejected\"] = \"user_rejected\";\n  ShareFilesErrorCodes2[\"GenericError\"] = \"generic_error\";\n  ShareFilesErrorCodes2[\"InvalidFileName\"] = \"invalid_file_name\";\n  return ShareFilesErrorCodes2;\n})(ShareFilesErrorCodes || {});\nvar ShareFilesErrorMessage = {\n  [\"user_rejected\" /* UserRejected */]: \"User rejected the request.\",\n  [\"generic_error\" /* GenericError */]: \"Something unexpected went wrong.\",\n  [\"invalid_file_name\" /* InvalidFileName */]: \"Invalid file name. Make sure you include the extension\"\n};\nvar MicrophoneErrorCodes = /* @__PURE__ */ ((MicrophoneErrorCodes2) => {\n  MicrophoneErrorCodes2[\"MiniAppPermissionNotEnabled\"] = \"mini_app_permission_not_enabled\";\n  MicrophoneErrorCodes2[\"WorldAppPermissionNotEnabled\"] = \"world_app_permission_not_enabled\";\n  return MicrophoneErrorCodes2;\n})(MicrophoneErrorCodes || {});\nvar MicrophoneErrorMessage = {\n  [\"mini_app_permission_not_enabled\" /* MiniAppPermissionNotEnabled */]: \"Microphone permission not enabled for your Mini App\",\n  [\"world_app_permission_not_enabled\" /* WorldAppPermissionNotEnabled */]: \"Microphone permission not enabled in World App\"\n};\n\n// types/responses.ts\nvar ResponseEvent = /* @__PURE__ */ ((ResponseEvent2) => {\n  ResponseEvent2[\"MiniAppVerifyAction\"] = \"miniapp-verify-action\";\n  ResponseEvent2[\"MiniAppPayment\"] = \"miniapp-payment\";\n  ResponseEvent2[\"MiniAppWalletAuth\"] = \"miniapp-wallet-auth\";\n  ResponseEvent2[\"MiniAppSendTransaction\"] = \"miniapp-send-transaction\";\n  ResponseEvent2[\"MiniAppSignMessage\"] = \"miniapp-sign-message\";\n  ResponseEvent2[\"MiniAppSignTypedData\"] = \"miniapp-sign-typed-data\";\n  ResponseEvent2[\"MiniAppShareContacts\"] = \"miniapp-share-contacts\";\n  ResponseEvent2[\"MiniAppRequestPermission\"] = \"miniapp-request-permission\";\n  ResponseEvent2[\"MiniAppGetPermissions\"] = \"miniapp-get-permissions\";\n  ResponseEvent2[\"MiniAppSendHapticFeedback\"] = \"miniapp-send-haptic-feedback\";\n  ResponseEvent2[\"MiniAppShare\"] = \"miniapp-share\";\n  ResponseEvent2[\"MiniAppMicrophone\"] = \"miniapp-microphone\";\n  return ResponseEvent2;\n})(ResponseEvent || {});\n\n// types/payment.ts\nvar Tokens = /* @__PURE__ */ ((Tokens2) => {\n  Tokens2[\"USDC\"] = \"USDCE\";\n  Tokens2[\"WLD\"] = \"WLD\";\n  return Tokens2;\n})(Tokens || {});\nvar TokenDecimals = {\n  [\"USDCE\" /* USDC */]: 6,\n  [\"WLD\" /* WLD */]: 18\n};\nvar Network = /* @__PURE__ */ ((Network2) => {\n  Network2[\"Optimism\"] = \"optimism\";\n  Network2[\"WorldChain\"] = \"worldchain\";\n  return Network2;\n})(Network || {});\n\n// helpers/payment/client.ts\nvar tokenToDecimals = (amount, token) => {\n  const decimals = TokenDecimals[token];\n  if (decimals === void 0) {\n    throw new Error(`Invalid token: ${token}`);\n  }\n  const factor = 10 ** decimals;\n  const result = amount * factor;\n  if (!Number.isInteger(result)) {\n    throw new Error(`The resulting amount is not a whole number: ${result}`);\n  }\n  return result;\n};\nvar validatePaymentPayload = (payload) => {\n  if (payload.tokens.some(\n    (token) => token.symbol == \"USDCE\" /* USDC */ && parseFloat(token.token_amount) < 0.1\n  )) {\n    console.error(\"USDC amount should be greater than $0.1\");\n    return false;\n  }\n  if (payload.reference.length > 36) {\n    console.error(\"Reference must not exceed 36 characters\");\n    return false;\n  }\n  if (typeof payload.reference !== \"string\") {\n    throw new Error(\"Reference must be a string\");\n  }\n  return true;\n};\n\n// helpers/siwe/siwe.ts\n\n\nvar PREAMBLE = \" wants you to sign in with your Ethereum account:\";\nvar URI_TAG = \"URI: \";\nvar VERSION_TAG = \"Version: \";\nvar CHAIN_TAG = \"Chain ID: \";\nvar NONCE_TAG = \"Nonce: \";\nvar IAT_TAG = \"Issued At: \";\nvar EXP_TAG = \"Expiration Time: \";\nvar NBF_TAG = \"Not Before: \";\nvar RID_TAG = \"Request ID: \";\nvar ERC_191_PREFIX = \"\u0019Ethereum Signed Message:\\n\";\nvar EIP1271_MAGICVALUE = \"0x1626ba7e\";\nvar SAFE_CONTRACT_ABI = [\n  {\n    inputs: [\n      {\n        internalType: \"address\",\n        name: \"owner\",\n        type: \"address\"\n      }\n    ],\n    name: \"isOwner\",\n    outputs: [\n      {\n        internalType: \"bool\",\n        name: \"\",\n        type: \"bool\"\n      }\n    ],\n    stateMutability: \"view\",\n    type: \"function\"\n  },\n  {\n    inputs: [\n      {\n        internalType: \"bytes32\",\n        name: \"_message\",\n        type: \"bytes32\"\n      },\n      {\n        internalType: \"bytes\",\n        name: \"_signature\",\n        type: \"bytes\"\n      }\n    ],\n    name: \"isValidSignature\",\n    outputs: [\n      {\n        internalType: \"bytes4\",\n        name: \"\",\n        type: \"bytes4\"\n      }\n    ],\n    stateMutability: \"view\",\n    type: \"function\"\n  }\n];\nvar tagged = (line, tag) => {\n  if (line && line.includes(tag)) {\n    return line.replace(tag, \"\");\n  } else {\n    throw new Error(`Missing '${tag}'`);\n  }\n};\nvar parseSiweMessage = (inputString) => {\n  const lines = inputString.split(\"\\n\")[Symbol.iterator]();\n  const domain = tagged(lines.next()?.value, PREAMBLE);\n  const address = lines.next()?.value;\n  lines.next();\n  const nextValue = lines.next()?.value;\n  let statement;\n  if (nextValue) {\n    statement = nextValue;\n    lines.next();\n  }\n  const uri = tagged(lines.next()?.value, URI_TAG);\n  const version = tagged(lines.next()?.value, VERSION_TAG);\n  const chain_id = tagged(lines.next()?.value, CHAIN_TAG);\n  const nonce = tagged(lines.next()?.value, NONCE_TAG);\n  const issued_at = tagged(lines.next()?.value, IAT_TAG);\n  let expiration_time, not_before, request_id;\n  for (let line of lines) {\n    if (line.startsWith(EXP_TAG)) {\n      expiration_time = tagged(line, EXP_TAG);\n    } else if (line.startsWith(NBF_TAG)) {\n      not_before = tagged(line, NBF_TAG);\n    } else if (line.startsWith(RID_TAG)) {\n      request_id = tagged(line, RID_TAG);\n    }\n  }\n  if (lines.next().done === false) {\n    throw new Error(\"Extra lines in the input\");\n  }\n  const siweMessageData = {\n    domain,\n    address,\n    statement,\n    uri,\n    version,\n    chain_id,\n    nonce,\n    issued_at,\n    expiration_time,\n    not_before,\n    request_id\n  };\n  return siweMessageData;\n};\nvar generateSiweMessage = (siweMessageData) => {\n  let siweMessage = \"\";\n  if (siweMessageData.scheme) {\n    siweMessage += `${siweMessageData.scheme}://${siweMessageData.domain} wants you to sign in with your Ethereum account:\n`;\n  } else {\n    siweMessage += `${siweMessageData.domain} wants you to sign in with your Ethereum account:\n`;\n  }\n  if (siweMessageData.address) {\n    siweMessage += `${siweMessageData.address}\n`;\n  } else {\n    siweMessage += \"{address}\\n\";\n  }\n  siweMessage += \"\\n\";\n  if (siweMessageData.statement) {\n    siweMessage += `${siweMessageData.statement}\n`;\n  }\n  siweMessage += \"\\n\";\n  siweMessage += `URI: ${siweMessageData.uri}\n`;\n  siweMessage += `Version: ${siweMessageData.version}\n`;\n  siweMessage += `Chain ID: ${siweMessageData.chain_id}\n`;\n  siweMessage += `Nonce: ${siweMessageData.nonce}\n`;\n  siweMessage += `Issued At: ${siweMessageData.issued_at}\n`;\n  if (siweMessageData.expiration_time) {\n    siweMessage += `Expiration Time: ${siweMessageData.expiration_time}\n`;\n  }\n  if (siweMessageData.not_before) {\n    siweMessage += `Not Before: ${siweMessageData.not_before}\n`;\n  }\n  if (siweMessageData.request_id) {\n    siweMessage += `Request ID: ${siweMessageData.request_id}\n`;\n  }\n  return siweMessage;\n};\nvar verifySiweMessage = (payload, nonce, statement, requestId, userProvider) => {\n  if (payload.version === 2) {\n    return verifySiweMessageV2(\n      payload,\n      nonce,\n      statement,\n      requestId,\n      userProvider\n    );\n  } else {\n    return verifySiweMessageV1(\n      payload,\n      nonce,\n      statement,\n      requestId,\n      userProvider\n    );\n  }\n};\nvar validateMessage = (siweMessageData, nonce, statement, requestId) => {\n  if (siweMessageData.expiration_time) {\n    const expirationTime = new Date(siweMessageData.expiration_time);\n    if (expirationTime < /* @__PURE__ */ new Date()) {\n      throw new Error(\"Expired message\");\n    }\n  }\n  if (siweMessageData.not_before) {\n    const notBefore = new Date(siweMessageData.not_before);\n    if (notBefore > /* @__PURE__ */ new Date()) {\n      throw new Error(\"Not Before time has not passed\");\n    }\n  }\n  if (nonce && siweMessageData.nonce !== nonce) {\n    throw new Error(\n      `Nonce mismatch. Got: ${siweMessageData.nonce}, Expected: ${nonce}`\n    );\n  }\n  if (statement && siweMessageData.statement !== statement) {\n    throw new Error(\n      `Statement mismatch. Got: ${siweMessageData.statement}, Expected: ${statement}`\n    );\n  }\n  if (requestId && siweMessageData.request_id !== requestId) {\n    throw new Error(\n      `Request ID mismatch. Got: ${siweMessageData.request_id}, Expected: ${requestId}`\n    );\n  }\n  return true;\n};\nvar verifySiweMessageV1 = async (payload, nonce, statement, requestId, userProvider) => {\n  if (typeof window !== \"undefined\") {\n    throw new Error(\"Wallet auth payload can only be verified in the backend\");\n  }\n  const { message, signature, address } = payload;\n  const siweMessageData = parseSiweMessage(message);\n  validateMessage(siweMessageData, nonce, statement, requestId);\n  let provider = userProvider || (0,viem__WEBPACK_IMPORTED_MODULE_1__.createPublicClient)({ chain: viem_chains__WEBPACK_IMPORTED_MODULE_2__.worldchain, transport: (0,viem__WEBPACK_IMPORTED_MODULE_3__.http)() });\n  const signedMessage = `${ERC_191_PREFIX}${message.length}${message}`;\n  const hashedMessage = (0,viem__WEBPACK_IMPORTED_MODULE_4__.hashMessage)(signedMessage);\n  const contract = (0,viem__WEBPACK_IMPORTED_MODULE_5__.getContract)({\n    address,\n    abi: SAFE_CONTRACT_ABI,\n    client: provider\n  });\n  try {\n    const recoveredAddress = await (0,viem__WEBPACK_IMPORTED_MODULE_6__.recoverAddress)({\n      hash: hashedMessage,\n      signature: `0x${signature}`\n    });\n    const isOwner = await contract.read.isOwner([recoveredAddress]);\n    if (!isOwner) {\n      throw new Error(\"Signature verification failed, invalid owner\");\n    }\n  } catch (error) {\n    throw new Error(\"Signature verification failed\");\n  }\n  return { isValid: true, siweMessageData };\n};\nvar verifySiweMessageV2 = async (payload, nonce, statement, requestId, userProvider) => {\n  if (typeof window !== \"undefined\") {\n    throw new Error(\"Wallet auth payload can only be verified in the backend\");\n  }\n  const { message, signature, address } = payload;\n  const siweMessageData = parseSiweMessage(message);\n  if (!validateMessage(siweMessageData, nonce, statement, requestId)) {\n    throw new Error(\"Validation failed\");\n  }\n  try {\n    const walletContract = (0,viem__WEBPACK_IMPORTED_MODULE_5__.getContract)({\n      address,\n      abi: SAFE_CONTRACT_ABI,\n      client: userProvider || (0,viem__WEBPACK_IMPORTED_MODULE_1__.createPublicClient)({ chain: viem_chains__WEBPACK_IMPORTED_MODULE_2__.worldchain, transport: (0,viem__WEBPACK_IMPORTED_MODULE_3__.http)() })\n    });\n    const hashedMessage = (0,viem__WEBPACK_IMPORTED_MODULE_4__.hashMessage)(message);\n    const res = await walletContract.read.isValidSignature([\n      hashedMessage,\n      signature\n    ]);\n    return {\n      isValid: res === EIP1271_MAGICVALUE,\n      siweMessageData\n    };\n  } catch (error) {\n    console.log(error);\n    throw new Error(\"Signature verification failed\");\n  }\n};\n\n// types/commands.ts\nvar Command = /* @__PURE__ */ ((Command2) => {\n  Command2[\"Verify\"] = \"verify\";\n  Command2[\"Pay\"] = \"pay\";\n  Command2[\"WalletAuth\"] = \"wallet-auth\";\n  Command2[\"SendTransaction\"] = \"send-transaction\";\n  Command2[\"SignMessage\"] = \"sign-message\";\n  Command2[\"SignTypedData\"] = \"sign-typed-data\";\n  Command2[\"ShareContacts\"] = \"share-contacts\";\n  Command2[\"RequestPermission\"] = \"request-permission\";\n  Command2[\"GetPermissions\"] = \"get-permissions\";\n  Command2[\"SendHapticFeedback\"] = \"send-haptic-feedback\";\n  Command2[\"Share\"] = \"share\";\n  return Command2;\n})(Command || {});\nvar Permission = /* @__PURE__ */ ((Permission2) => {\n  Permission2[\"Notifications\"] = \"notifications\";\n  Permission2[\"Contacts\"] = \"contacts\";\n  Permission2[\"Microphone\"] = \"microphone\";\n  return Permission2;\n})(Permission || {});\n\n// minikit.ts\n\n\n\n// helpers/send-webview-event.ts\nvar sendWebviewEvent = (payload) => {\n  if (window.webkit) {\n    window.webkit?.messageHandlers?.minikit?.postMessage?.(payload);\n  } else if (window.Android) {\n    window.Android.postMessage?.(JSON.stringify(payload));\n  }\n};\n\n// helpers/microphone/index.ts\nvar microphoneSetupDone = false;\nvar setupMicrophone = () => {\n  if (microphoneSetupDone) {\n    return;\n  }\n  if (typeof navigator !== \"undefined\" && !navigator.mediaDevices?.getUserMedia)\n    return;\n  const originalStop = MediaStreamTrack.prototype.stop;\n  MediaStreamTrack.prototype.stop = function() {\n    originalStop.call(this);\n    if (this.readyState === \"ended\") {\n      setTimeout(() => this.dispatchEvent(new Event(\"ended\")), 0);\n    }\n  };\n  const realGUM = navigator.mediaDevices.getUserMedia.bind(\n    navigator.mediaDevices\n  );\n  const live = /* @__PURE__ */ new Set();\n  async function wrapped(constraints) {\n    const stream = await realGUM(constraints);\n    sendWebviewEvent({\n      command: \"microphone-stream-started\",\n      version: 1,\n      payload: {\n        streamId: stream.id\n      }\n    });\n    live.add(stream);\n    stream.getTracks().forEach((t) => {\n      t.addEventListener(\"ended\", () => {\n        sendWebviewEvent({\n          command: \"microphone-stream-ended\",\n          version: 1,\n          payload: {\n            streamId: stream.id\n          }\n        });\n        live.delete(stream);\n      });\n    });\n    return stream;\n  }\n  Object.defineProperty(navigator.mediaDevices, \"getUserMedia\", {\n    value: wrapped,\n    writable: false,\n    configurable: false,\n    enumerable: true\n  });\n  Object.freeze(navigator.mediaDevices);\n  const stopAllMiniAppMicrophoneStreams = () => {\n    live.forEach((s) => {\n      s.getTracks().forEach((t) => {\n        t.stop();\n        sendWebviewEvent({\n          command: \"microphone-stream-ended\",\n          version: 1,\n          payload: {\n            streamId: s.id\n          }\n        });\n      });\n    });\n    live.clear();\n  };\n  MiniKit.subscribe(\"miniapp-microphone\" /* MiniAppMicrophone */, (payload) => {\n    if (payload.status === \"error\" && (payload.error_code === \"mini_app_permission_not_enabled\" /* MiniAppPermissionNotEnabled */ || payload.error_code === \"world_app_permission_not_enabled\" /* WorldAppPermissionNotEnabled */)) {\n      console.log(\"stopping all microphone streams\", payload);\n      stopAllMiniAppMicrophoneStreams();\n    }\n  });\n  window.__stopAllMiniAppMicrophoneStreams = stopAllMiniAppMicrophoneStreams;\n  microphoneSetupDone = true;\n};\n\n// helpers/proof/index.ts\n\n\nvar semaphoreVerifierAddress = \"0x79f46b94d134109EbcbbddBAeD0E88790409A0e4\";\nvar semaphoreVerifierAbi = [\n  {\n    inputs: [\n      {\n        internalType: \"uint256[8]\",\n        name: \"proof\",\n        type: \"uint256[8]\"\n      }\n    ],\n    name: \"compressProof\",\n    outputs: [\n      {\n        internalType: \"uint256[4]\",\n        name: \"compressed\",\n        type: \"uint256[4]\"\n      }\n    ],\n    stateMutability: \"view\",\n    type: \"function\"\n  }\n];\nvar compressAndPadProof = async (proof, rpcUrl) => {\n  try {\n    const publicClient = (0,viem__WEBPACK_IMPORTED_MODULE_1__.createPublicClient)({\n      chain: viem_chains__WEBPACK_IMPORTED_MODULE_2__.worldchain,\n      transport: (0,viem__WEBPACK_IMPORTED_MODULE_3__.http)(\n        rpcUrl || \"https://worldchain-mainnet.g.alchemy.com/public\"\n      )\n    });\n    const decodedProof = (0,viem__WEBPACK_IMPORTED_MODULE_8__.decodeAbiParameters)(\n      [{ type: \"uint256[8]\" }],\n      proof\n    )[0];\n    const compressedProof = await publicClient.readContract({\n      address: semaphoreVerifierAddress,\n      abi: semaphoreVerifierAbi,\n      functionName: \"compressProof\",\n      args: [decodedProof]\n    });\n    const paddedProof = [...compressedProof, 0n, 0n, 0n, 0n];\n    return (0,viem__WEBPACK_IMPORTED_MODULE_9__.encodeAbiParameters)([{ type: \"uint256[8]\" }], [paddedProof]);\n  } catch (e) {\n    return proof;\n  }\n};\n\n// helpers/share/index.ts\nvar MAX_FILES = 10;\nvar MAX_TOTAL_SIZE_MB = 50;\nvar MAX_TOTAL_SIZE_BYTES = MAX_TOTAL_SIZE_MB * 1024 * 1024;\nvar processFile = async (file) => {\n  const buffer = await file.arrayBuffer();\n  const uint8Array = new Uint8Array(buffer);\n  let binaryString = \"\";\n  const K_CHUNK_SIZE = 32768;\n  for (let i = 0; i < uint8Array.length; i += K_CHUNK_SIZE) {\n    const chunk = uint8Array.subarray(\n      i,\n      Math.min(i + K_CHUNK_SIZE, uint8Array.length)\n    );\n    binaryString += String.fromCharCode.apply(\n      null,\n      Array.from(chunk)\n      // Convert Uint8Array chunk to number[]\n    );\n  }\n  const base64Data = btoa(binaryString);\n  return {\n    name: file.name,\n    type: file.type,\n    data: base64Data\n  };\n};\nvar formatShareInput = async (input) => {\n  if (!input.files) {\n    return {\n      title: input.title,\n      text: input.text,\n      url: input.url\n    };\n  }\n  if (!Array.isArray(input.files)) {\n    throw new Error('The \"files\" property must be an array.');\n  }\n  if (input.files.length === 0) {\n  } else {\n    if (input.files.length > MAX_FILES) {\n      throw new Error(`Cannot share more than ${MAX_FILES} files.`);\n    }\n    let totalSize = 0;\n    for (const file of input.files) {\n      if (!(file instanceof File)) {\n        throw new Error(\n          `Each item in the 'files' array must be a File object. Received: ${typeof file}`\n        );\n      }\n      totalSize += file.size;\n    }\n    if (totalSize > MAX_TOTAL_SIZE_BYTES) {\n      throw new Error(`Total file size cannot exceed ${MAX_TOTAL_SIZE_MB}MB.`);\n    }\n  }\n  const fileProcessingPromises = input.files.map((file) => processFile(file));\n  const processedFiles = await Promise.all(fileProcessingPromises);\n  return {\n    files: processedFiles,\n    title: input.title,\n    text: input.text,\n    url: input.url\n  };\n};\n\n// helpers/siwe/validate-wallet-auth-command-input.ts\nvar validateWalletAuthCommandInput = (params) => {\n  if (!params.nonce) {\n    return { valid: false, message: \"'nonce' is required\" };\n  }\n  if (params.nonce.length < 8) {\n    return { valid: false, message: \"'nonce' must be at least 8 characters\" };\n  }\n  if (params.statement && params.statement.includes(\"\\n\")) {\n    return { valid: false, message: \"'statement' must not contain newlines\" };\n  }\n  if (params.expirationTime && new Date(params.expirationTime) < /* @__PURE__ */ new Date()) {\n    return { valid: false, message: \"'expirationTime' must be in the future\" };\n  }\n  if (params.expirationTime && new Date(params.expirationTime) > new Date(Date.now() + 7 * 24 * 60 * 60 * 1e3)) {\n    return { valid: false, message: \"'expirationTime' must be within 7 days\" };\n  }\n  if (params.notBefore && new Date(params.notBefore) > new Date(Date.now() + 7 * 24 * 60 * 60 * 1e3)) {\n    return { valid: false, message: \"'notBefore' must be within 7 days\" };\n  }\n  return { valid: true };\n};\n\n// helpers/transaction/validate-payload.ts\nvar isValidHex = (str) => {\n  return /^0x[0-9A-Fa-f]+$/.test(str);\n};\nvar objectValuesToArrayRecursive = (input) => {\n  if (input === null || typeof input !== \"object\") {\n    return input;\n  }\n  if (Array.isArray(input)) {\n    return input.map((item) => objectValuesToArrayRecursive(item));\n  }\n  const values = Object.values(input);\n  return values.map((value) => objectValuesToArrayRecursive(value));\n};\nvar processPayload = (payload) => {\n  if (typeof payload === \"boolean\" || typeof payload === \"string\" || payload === null || payload === void 0) {\n    return payload;\n  }\n  if (typeof payload === \"number\" || typeof payload === \"bigint\") {\n    return String(payload);\n  }\n  if (Array.isArray(payload)) {\n    return payload.map((value) => processPayload(value));\n  }\n  if (typeof payload === \"object\") {\n    const result = { ...payload };\n    if (\"value\" in result && result.value !== void 0) {\n      if (typeof result.value !== \"string\") {\n        result.value = String(result.value);\n      }\n      if (!isValidHex(result.value)) {\n        console.error(\n          \"Transaction value must be a valid hex string\",\n          result.value\n        );\n        throw new Error(\n          `Transaction value must be a valid hex string: ${result.value}`\n        );\n      }\n    }\n    for (const key in result) {\n      if (Object.prototype.hasOwnProperty.call(result, key)) {\n        result[key] = processPayload(result[key]);\n      }\n    }\n    return result;\n  }\n  return payload;\n};\nvar validateSendTransactionPayload = (payload) => {\n  if (payload.formatPayload) {\n    const formattedPayload = processPayload(payload);\n    formattedPayload.transaction = formattedPayload.transaction.map((tx) => {\n      const args = objectValuesToArrayRecursive(tx.args);\n      return {\n        ...tx,\n        args\n      };\n    });\n    return formattedPayload;\n  }\n  return payload;\n};\n\n// helpers/usernames/index.ts\nvar getUserProfile = async (address) => {\n  const res = await fetch(\"https://usernames.worldcoin.org/api/v1/query\", {\n    method: \"POST\",\n    headers: {\n      \"Content-Type\": \"application/json\"\n    },\n    body: JSON.stringify({\n      addresses: [address]\n    })\n  });\n  const usernames = await res.json();\n  return usernames?.[0] ?? { username: null, profile_picture_url: null };\n};\n\n// minikit.ts\nvar sendMiniKitEvent = (payload) => {\n  sendWebviewEvent(payload);\n};\nvar _MiniKit = class _MiniKit {\n  static sendInit() {\n    sendWebviewEvent({\n      command: \"init\",\n      payload: {\n        version: this.MINIKIT_VERSION,\n        minorVersion: this.MINIKIT_MINOR_VERSION\n      }\n    });\n  }\n  static subscribe(event, handler) {\n    if (event === \"miniapp-wallet-auth\" /* MiniAppWalletAuth */) {\n      const originalHandler = handler;\n      const wrappedHandler = async (payload) => {\n        if (payload.status === \"success\") {\n          _MiniKit.user.walletAddress = payload.address;\n          try {\n            const user = await _MiniKit.getUserByAddress(payload.address);\n            _MiniKit.user = { ..._MiniKit.user, ...user };\n          } catch (error) {\n            console.error(\"Failed to fetch user profile:\", error);\n          }\n        }\n        originalHandler(payload);\n      };\n      this.listeners[event] = wrappedHandler;\n    } else if (event === \"miniapp-verify-action\" /* MiniAppVerifyAction */) {\n      const originalHandler = handler;\n      const wrappedHandler = (payload) => {\n        if (payload.status === \"success\" && payload.verification_level === _worldcoin_idkit_core__WEBPACK_IMPORTED_MODULE_0__.VerificationLevel.Orb) {\n          compressAndPadProof(payload.proof).then(\n            (compressedProof) => {\n              payload.proof = compressedProof;\n              originalHandler(payload);\n            }\n          );\n        } else {\n          originalHandler(payload);\n        }\n      };\n      this.listeners[event] = wrappedHandler;\n    } else {\n      this.listeners[event] = handler;\n    }\n  }\n  static unsubscribe(event) {\n    delete this.listeners[event];\n  }\n  static trigger(event, payload) {\n    if (!this.listeners[event]) {\n      console.error(\n        `No handler for event ${event}, payload: ${JSON.stringify(payload)}`\n      );\n      return;\n    }\n    this.listeners[event](payload);\n  }\n  static async awaitCommand(event, command, executor) {\n    return new Promise((resolve) => {\n      let commandPayload = null;\n      const handleAndUnsubscribe = (payload) => {\n        this.unsubscribe(event);\n        resolve({ commandPayload, finalPayload: payload });\n      };\n      this.subscribe(event, handleAndUnsubscribe);\n      commandPayload = executor();\n    });\n  }\n  static commandsValid(worldAppSupportedCommands) {\n    let allCommandsValid = true;\n    Object.entries(this.miniKitCommandVersion).forEach(\n      ([minikitCommandName, version]) => {\n        const commandInput = worldAppSupportedCommands.find(\n          (command) => command.name === minikitCommandName\n        );\n        let isCommandValid = false;\n        if (!commandInput) {\n          console.warn(\n            `Command ${minikitCommandName} is not supported by the app. Try updating the app version`\n          );\n        } else {\n          if (commandInput.supported_versions.includes(version)) {\n            _MiniKit.isCommandAvailable[minikitCommandName] = true;\n            isCommandValid = true;\n          } else {\n            isCommandValid = true;\n            console.warn(\n              `Command ${minikitCommandName} version ${version} is not supported by the app. Supported versions: ${commandInput.supported_versions.join(\", \")}. This is not an error, but it is recommended to update the World App version.`\n            );\n            _MiniKit.isCommandAvailable[minikitCommandName] = isCommandValid;\n          }\n        }\n        if (!isCommandValid) {\n          allCommandsValid = false;\n        }\n      }\n    );\n    return allCommandsValid;\n  }\n  static install(appId) {\n    if (typeof window === \"undefined\" || Boolean(window.MiniKit)) {\n      return {\n        success: false,\n        errorCode: \"already_installed\" /* AlreadyInstalled */,\n        errorMessage: MiniKitInstallErrorMessage[\"already_installed\" /* AlreadyInstalled */]\n      };\n    }\n    if (!appId) {\n      console.warn(\"App ID not provided during install\");\n    } else {\n      _MiniKit.appId = appId;\n    }\n    if (!window.WorldApp) {\n      return {\n        success: false,\n        errorCode: \"outside_of_worldapp\" /* OutsideOfWorldApp */,\n        errorMessage: MiniKitInstallErrorMessage[\"outside_of_worldapp\" /* OutsideOfWorldApp */]\n      };\n    }\n    _MiniKit.user.optedIntoOptionalAnalytics = window.WorldApp.is_optional_analytics;\n    _MiniKit.user.deviceOS = window.WorldApp.device_os;\n    _MiniKit.user.worldAppVersion = window.WorldApp.world_app_version;\n    _MiniKit.deviceProperties.safeAreaInsets = window.WorldApp.safe_area_insets;\n    _MiniKit.deviceProperties.deviceOS = window.WorldApp.device_os;\n    _MiniKit.deviceProperties.worldAppVersion = window.WorldApp.world_app_version;\n    try {\n      window.MiniKit = _MiniKit;\n      this.sendInit();\n    } catch (error) {\n      console.error(\n        MiniKitInstallErrorMessage[\"unknown\" /* Unknown */],\n        error\n      );\n      return {\n        success: false,\n        errorCode: \"unknown\" /* Unknown */,\n        errorMessage: MiniKitInstallErrorMessage[\"unknown\" /* Unknown */]\n      };\n    }\n    _MiniKit.isReady = true;\n    setupMicrophone();\n    if (!this.commandsValid(window.WorldApp.supported_commands)) {\n      return {\n        success: false,\n        errorCode: \"app_out_of_date\" /* AppOutOfDate */,\n        errorMessage: MiniKitInstallErrorMessage[\"app_out_of_date\" /* AppOutOfDate */]\n      };\n    }\n    return { success: true };\n  }\n  static isInstalled(debug) {\n    const isInstalled = _MiniKit.isReady && Boolean(window.MiniKit);\n    if (!isInstalled)\n      console.error(\n        \"MiniKit is not installed. Make sure you're running the application inside of World App\"\n      );\n    if (debug && isInstalled) console.log(\"MiniKit is alive!\");\n    return isInstalled;\n  }\n};\n_MiniKit.MINIKIT_VERSION = 1;\n_MiniKit.MINIKIT_MINOR_VERSION = 96;\n_MiniKit.miniKitCommandVersion = {\n  [\"verify\" /* Verify */]: 1,\n  [\"pay\" /* Pay */]: 1,\n  [\"wallet-auth\" /* WalletAuth */]: 2,\n  [\"send-transaction\" /* SendTransaction */]: 1,\n  [\"sign-message\" /* SignMessage */]: 1,\n  [\"sign-typed-data\" /* SignTypedData */]: 1,\n  [\"share-contacts\" /* ShareContacts */]: 1,\n  [\"request-permission\" /* RequestPermission */]: 1,\n  [\"get-permissions\" /* GetPermissions */]: 1,\n  [\"send-haptic-feedback\" /* SendHapticFeedback */]: 1,\n  [\"share\" /* Share */]: 1\n};\n_MiniKit.isCommandAvailable = {\n  [\"verify\" /* Verify */]: false,\n  [\"pay\" /* Pay */]: false,\n  [\"wallet-auth\" /* WalletAuth */]: false,\n  [\"send-transaction\" /* SendTransaction */]: false,\n  [\"sign-message\" /* SignMessage */]: false,\n  [\"sign-typed-data\" /* SignTypedData */]: false,\n  [\"share-contacts\" /* ShareContacts */]: false,\n  [\"request-permission\" /* RequestPermission */]: false,\n  [\"get-permissions\" /* GetPermissions */]: false,\n  [\"send-haptic-feedback\" /* SendHapticFeedback */]: false,\n  [\"share\" /* Share */]: false\n};\n_MiniKit.listeners = {\n  [\"miniapp-verify-action\" /* MiniAppVerifyAction */]: () => {\n  },\n  [\"miniapp-payment\" /* MiniAppPayment */]: () => {\n  },\n  [\"miniapp-wallet-auth\" /* MiniAppWalletAuth */]: () => {\n  },\n  [\"miniapp-send-transaction\" /* MiniAppSendTransaction */]: () => {\n  },\n  [\"miniapp-sign-message\" /* MiniAppSignMessage */]: () => {\n  },\n  [\"miniapp-sign-typed-data\" /* MiniAppSignTypedData */]: () => {\n  },\n  [\"miniapp-share-contacts\" /* MiniAppShareContacts */]: () => {\n  },\n  [\"miniapp-request-permission\" /* MiniAppRequestPermission */]: () => {\n  },\n  [\"miniapp-get-permissions\" /* MiniAppGetPermissions */]: () => {\n  },\n  [\"miniapp-send-haptic-feedback\" /* MiniAppSendHapticFeedback */]: () => {\n  },\n  [\"miniapp-share\" /* MiniAppShare */]: () => {\n  },\n  [\"miniapp-microphone\" /* MiniAppMicrophone */]: () => {\n  }\n};\n_MiniKit.appId = null;\n_MiniKit.user = {};\n_MiniKit.isReady = false;\n_MiniKit.deviceProperties = {};\n_MiniKit.getUserByAddress = async (address) => {\n  const userProfile = await getUserProfile(\n    address ?? _MiniKit.user.walletAddress\n  );\n  return {\n    walletAddress: address ?? _MiniKit.user.walletAddress,\n    username: userProfile.username,\n    profilePictureUrl: userProfile.profile_picture_url\n  };\n};\n_MiniKit.getUserByUsername = async (username) => {\n  const res = await fetch(\n    `https://usernames.worldcoin.org/api/v1/${username}`,\n    {\n      method: \"GET\",\n      headers: {\n        \"Content-Type\": \"application/json\"\n      }\n    }\n  );\n  const user = await res.json();\n  return {\n    walletAddress: user.address,\n    username: user.username,\n    profilePictureUrl: user.profile_picture_url\n  };\n};\n// Simply re-exporting the existing function\n_MiniKit.getUserInfo = _MiniKit.getUserByAddress;\n_MiniKit.commands = {\n  verify: (payload) => {\n    if (typeof window === \"undefined\" || !_MiniKit.isCommandAvailable[\"verify\" /* Verify */]) {\n      console.error(\n        \"'verify' command is unavailable. Check MiniKit.install() or update the app version\"\n      );\n      return null;\n    }\n    const timestamp = (/* @__PURE__ */ new Date()).toISOString();\n    const eventPayload = {\n      action: (0,_worldcoin_idkit_core_hashing__WEBPACK_IMPORTED_MODULE_7__.encodeAction)(payload.action),\n      signal: (0,_worldcoin_idkit_core_hashing__WEBPACK_IMPORTED_MODULE_7__.generateSignal)(payload.signal).digest,\n      verification_level: payload.verification_level || _worldcoin_idkit_core__WEBPACK_IMPORTED_MODULE_0__.VerificationLevel.Orb,\n      timestamp\n    };\n    sendMiniKitEvent({\n      command: \"verify\" /* Verify */,\n      version: _MiniKit.miniKitCommandVersion[\"verify\" /* Verify */],\n      payload: eventPayload\n    });\n    return eventPayload;\n  },\n  pay: (payload) => {\n    if (typeof window === \"undefined\" || !_MiniKit.isCommandAvailable[\"pay\" /* Pay */]) {\n      console.error(\n        \"'pay' command is unavailable. Check MiniKit.install() or update the app version\"\n      );\n      return null;\n    }\n    if (!validatePaymentPayload(payload)) {\n      return null;\n    }\n    const eventPayload = {\n      ...payload,\n      network: \"worldchain\" /* WorldChain */\n    };\n    sendMiniKitEvent({\n      command: \"pay\" /* Pay */,\n      version: _MiniKit.miniKitCommandVersion[\"pay\" /* Pay */],\n      payload: eventPayload\n    });\n    return eventPayload;\n  },\n  walletAuth: (payload) => {\n    if (typeof window === \"undefined\" || !_MiniKit.isCommandAvailable[\"wallet-auth\" /* WalletAuth */]) {\n      console.error(\n        \"'walletAuth' command is unavailable. Check MiniKit.install() or update the app version\"\n      );\n      return null;\n    }\n    const validationResult = validateWalletAuthCommandInput(payload);\n    if (!validationResult.valid) {\n      console.error(\n        \"Failed to validate wallet auth input:\\n\\n -->\",\n        validationResult.message\n      );\n      return null;\n    }\n    let protocol = null;\n    try {\n      const currentUrl = new URL(window.location.href);\n      protocol = currentUrl.protocol.split(\":\")[0];\n    } catch (error) {\n      console.error(\"Failed to get current URL\", error);\n      return null;\n    }\n    const siweMessage = generateSiweMessage({\n      scheme: protocol,\n      domain: window.location.host,\n      statement: payload.statement ?? void 0,\n      uri: window.location.href,\n      version: \"1\",\n      chain_id: 480,\n      nonce: payload.nonce,\n      issued_at: (/* @__PURE__ */ new Date()).toISOString(),\n      expiration_time: payload.expirationTime?.toISOString() ?? void 0,\n      not_before: payload.notBefore?.toISOString() ?? void 0,\n      request_id: payload.requestId ?? void 0\n    });\n    const walletAuthPayload = { siweMessage };\n    const walletAuthVersion = _MiniKit.user.worldAppVersion && _MiniKit.user.worldAppVersion > 2087900 ? _MiniKit.miniKitCommandVersion[\"wallet-auth\" /* WalletAuth */] : 1;\n    sendMiniKitEvent({\n      command: \"wallet-auth\" /* WalletAuth */,\n      version: walletAuthVersion,\n      payload: walletAuthPayload\n    });\n    return walletAuthPayload;\n  },\n  sendTransaction: (payload) => {\n    if (typeof window === \"undefined\" || !_MiniKit.isCommandAvailable[\"send-transaction\" /* SendTransaction */]) {\n      console.error(\n        \"'sendTransaction' command is unavailable. Check MiniKit.install() or update the app version\"\n      );\n      return null;\n    }\n    payload.formatPayload = payload.formatPayload !== false;\n    const validatedPayload = validateSendTransactionPayload(payload);\n    sendMiniKitEvent({\n      command: \"send-transaction\" /* SendTransaction */,\n      version: _MiniKit.miniKitCommandVersion[\"send-transaction\" /* SendTransaction */],\n      payload: validatedPayload\n    });\n    return validatedPayload;\n  },\n  signMessage: (payload) => {\n    if (typeof window === \"undefined\" || !_MiniKit.isCommandAvailable[\"sign-message\" /* SignMessage */]) {\n      console.error(\n        \"'signMessage' command is unavailable. Check MiniKit.install() or update the app version\"\n      );\n      return null;\n    }\n    sendMiniKitEvent({\n      command: \"sign-message\" /* SignMessage */,\n      version: _MiniKit.miniKitCommandVersion[\"sign-message\" /* SignMessage */],\n      payload\n    });\n    return payload;\n  },\n  signTypedData: (payload) => {\n    if (typeof window === \"undefined\" || !_MiniKit.isCommandAvailable[\"sign-typed-data\" /* SignTypedData */]) {\n      console.error(\n        \"'signTypedData' command is unavailable. Check MiniKit.install() or update the app version\"\n      );\n      return null;\n    }\n    if (!payload.chainId) {\n      payload.chainId = 480;\n    }\n    sendMiniKitEvent({\n      command: \"sign-typed-data\" /* SignTypedData */,\n      version: _MiniKit.miniKitCommandVersion[\"sign-typed-data\" /* SignTypedData */],\n      payload\n    });\n    return payload;\n  },\n  shareContacts: (payload) => {\n    if (typeof window === \"undefined\" || !_MiniKit.isCommandAvailable[\"share-contacts\" /* ShareContacts */]) {\n      console.error(\n        \"'shareContacts' command is unavailable. Check MiniKit.install() or update the app version\"\n      );\n      return null;\n    }\n    sendMiniKitEvent({\n      command: \"share-contacts\" /* ShareContacts */,\n      version: _MiniKit.miniKitCommandVersion[\"share-contacts\" /* ShareContacts */],\n      payload\n    });\n    return payload;\n  },\n  requestPermission: (payload) => {\n    if (typeof window === \"undefined\" || !_MiniKit.isCommandAvailable[\"request-permission\" /* RequestPermission */]) {\n      console.error(\n        \"'requestPermission' command is unavailable. Check MiniKit.install() or update the app version\"\n      );\n      return null;\n    }\n    sendMiniKitEvent({\n      command: \"request-permission\" /* RequestPermission */,\n      version: _MiniKit.miniKitCommandVersion[\"request-permission\" /* RequestPermission */],\n      payload\n    });\n    return payload;\n  },\n  getPermissions: () => {\n    if (typeof window === \"undefined\" || !_MiniKit.isCommandAvailable[\"get-permissions\" /* GetPermissions */]) {\n      console.error(\n        \"'getPermissions' command is unavailable. Check MiniKit.install() or update the app version\"\n      );\n      return null;\n    }\n    sendMiniKitEvent({\n      command: \"get-permissions\" /* GetPermissions */,\n      version: _MiniKit.miniKitCommandVersion[\"get-permissions\" /* GetPermissions */],\n      payload: {}\n    });\n    return {\n      status: \"sent\"\n    };\n  },\n  sendHapticFeedback: (payload) => {\n    if (typeof window === \"undefined\" || !_MiniKit.isCommandAvailable[\"send-haptic-feedback\" /* SendHapticFeedback */]) {\n      console.error(\n        \"'sendHapticFeedback' command is unavailable. Check MiniKit.install() or update the app version\"\n      );\n      return null;\n    }\n    sendMiniKitEvent({\n      command: \"send-haptic-feedback\" /* SendHapticFeedback */,\n      version: _MiniKit.miniKitCommandVersion[\"send-haptic-feedback\" /* SendHapticFeedback */],\n      payload\n    });\n    return payload;\n  },\n  // We return share input here because the payload is formatted asynchronously\n  share: (payload) => {\n    if (typeof window === \"undefined\" || !_MiniKit.isCommandAvailable[\"share\" /* Share */]) {\n      console.error(\n        \"'share' command is unavailable. Check MiniKit.install() or update the app version\"\n      );\n      return null;\n    }\n    if (_MiniKit.deviceProperties.deviceOS === \"ios\" && typeof navigator !== \"undefined\") {\n      sendMiniKitEvent({\n        command: \"share\" /* Share */,\n        version: _MiniKit.miniKitCommandVersion[\"share\" /* Share */],\n        payload\n      });\n      navigator.share(payload);\n    } else {\n      formatShareInput(payload).then((formattedResult) => {\n        sendMiniKitEvent({\n          command: \"share\" /* Share */,\n          version: _MiniKit.miniKitCommandVersion[\"share\" /* Share */],\n          payload: formattedResult\n        });\n      }).catch((error) => {\n        console.error(\"Failed to format share input\", error);\n      });\n      _MiniKit.subscribe(\"miniapp-share\" /* MiniAppShare */, (payload2) => {\n        console.log(\"Share Response\", payload2);\n      });\n    }\n    return payload;\n  }\n};\n/**\n * This object contains async versions of all the commands.\n * Instead of using event listeners, you can just `await` these.\n *\n * They return a standardized object\n *\n * commandPayload - object returned by the command function\n *\n * finalPayload - object returned by the event listener, or in other words, WorldApp response\n */\n_MiniKit.commandsAsync = {\n  verify: async (payload) => {\n    return new Promise(async (resolve, reject) => {\n      try {\n        const response = await _MiniKit.awaitCommand(\n          \"miniapp-verify-action\" /* MiniAppVerifyAction */,\n          \"verify\" /* Verify */,\n          () => _MiniKit.commands.verify(payload)\n        );\n        if (response.finalPayload.status === \"success\" && response.finalPayload.verification_level === _worldcoin_idkit_core__WEBPACK_IMPORTED_MODULE_0__.VerificationLevel.Orb) {\n          response.finalPayload.proof = await compressAndPadProof(\n            response.finalPayload.proof\n          );\n        }\n        resolve(response);\n      } catch (error) {\n        reject(error);\n      }\n    });\n  },\n  pay: async (payload) => {\n    return new Promise(async (resolve, reject) => {\n      try {\n        const response = await _MiniKit.awaitCommand(\n          \"miniapp-payment\" /* MiniAppPayment */,\n          \"pay\" /* Pay */,\n          () => _MiniKit.commands.pay(payload)\n        );\n        resolve(response);\n      } catch (error) {\n        reject(error);\n      }\n    });\n  },\n  walletAuth: async (payload) => {\n    return new Promise(async (resolve, reject) => {\n      try {\n        const response = await _MiniKit.awaitCommand(\n          \"miniapp-wallet-auth\" /* MiniAppWalletAuth */,\n          \"wallet-auth\" /* WalletAuth */,\n          () => _MiniKit.commands.walletAuth(payload)\n        );\n        return resolve(response);\n      } catch (error) {\n        reject(error);\n      }\n    });\n  },\n  sendTransaction: async (payload) => {\n    return new Promise(async (resolve, reject) => {\n      try {\n        const response = await _MiniKit.awaitCommand(\n          \"miniapp-send-transaction\" /* MiniAppSendTransaction */,\n          \"send-transaction\" /* SendTransaction */,\n          () => _MiniKit.commands.sendTransaction(payload)\n        );\n        return resolve(response);\n      } catch (error) {\n        reject(error);\n      }\n    });\n  },\n  signMessage: async (payload) => {\n    return new Promise(async (resolve, reject) => {\n      try {\n        const response = await _MiniKit.awaitCommand(\n          \"miniapp-sign-message\" /* MiniAppSignMessage */,\n          \"sign-message\" /* SignMessage */,\n          () => _MiniKit.commands.signMessage(payload)\n        );\n        return resolve(response);\n      } catch (error) {\n        reject(error);\n      }\n    });\n  },\n  signTypedData: async (payload) => {\n    return new Promise(async (resolve, reject) => {\n      try {\n        const response = await _MiniKit.awaitCommand(\n          \"miniapp-sign-typed-data\" /* MiniAppSignTypedData */,\n          \"sign-typed-data\" /* SignTypedData */,\n          () => _MiniKit.commands.signTypedData(payload)\n        );\n        return resolve(response);\n      } catch (error) {\n        reject(error);\n      }\n    });\n  },\n  shareContacts: async (payload) => {\n    return new Promise(async (resolve, reject) => {\n      try {\n        const response = await _MiniKit.awaitCommand(\n          \"miniapp-share-contacts\" /* MiniAppShareContacts */,\n          \"share-contacts\" /* ShareContacts */,\n          () => _MiniKit.commands.shareContacts(payload)\n        );\n        return resolve(response);\n      } catch (error) {\n        reject(error);\n      }\n    });\n  },\n  requestPermission: async (payload) => {\n    return new Promise(async (resolve, reject) => {\n      try {\n        const response = await _MiniKit.awaitCommand(\n          \"miniapp-request-permission\" /* MiniAppRequestPermission */,\n          \"request-permission\" /* RequestPermission */,\n          () => _MiniKit.commands.requestPermission(payload)\n        );\n        resolve(response);\n      } catch (error) {\n        reject(error);\n      }\n    });\n  },\n  getPermissions: async () => {\n    return new Promise(async (resolve, reject) => {\n      try {\n        const response = await _MiniKit.awaitCommand(\n          \"miniapp-get-permissions\" /* MiniAppGetPermissions */,\n          \"get-permissions\" /* GetPermissions */,\n          () => _MiniKit.commands.getPermissions()\n        );\n        resolve(response);\n      } catch (error) {\n        reject(error);\n      }\n    });\n  },\n  sendHapticFeedback: async (payload) => {\n    return new Promise(async (resolve, reject) => {\n      try {\n        const response = await _MiniKit.awaitCommand(\n          \"miniapp-send-haptic-feedback\" /* MiniAppSendHapticFeedback */,\n          \"send-haptic-feedback\" /* SendHapticFeedback */,\n          () => _MiniKit.commands.sendHapticFeedback(payload)\n        );\n        resolve(response);\n      } catch (error) {\n        reject(error);\n      }\n    });\n  },\n  share: async (payload) => {\n    return new Promise(async (resolve, reject) => {\n      try {\n        const response = await _MiniKit.awaitCommand(\n          \"miniapp-share\" /* MiniAppShare */,\n          \"share\" /* Share */,\n          () => _MiniKit.commands.share(payload)\n        );\n        resolve({\n          commandPayload: response.commandPayload,\n          finalPayload: response.finalPayload\n        });\n      } catch (error) {\n        reject(error);\n      }\n    });\n  }\n};\nvar MiniKit = _MiniKit;\n\n\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@worldcoin/minikit-js/build/chunk-DKXMTG56.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@worldcoin/minikit-js/build/index.js":
/*!***********************************************************!*\
  !*** ./node_modules/@worldcoin/minikit-js/build/index.js ***!
  \***********************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   Command: () => (/* reexport safe */ _chunk_DKXMTG56_js__WEBPACK_IMPORTED_MODULE_0__.Command),\n/* harmony export */   GetPermissionsErrorCodes: () => (/* reexport safe */ _chunk_DKXMTG56_js__WEBPACK_IMPORTED_MODULE_0__.GetPermissionsErrorCodes),\n/* harmony export */   GetPermissionsErrorMessage: () => (/* reexport safe */ _chunk_DKXMTG56_js__WEBPACK_IMPORTED_MODULE_0__.GetPermissionsErrorMessage),\n/* harmony export */   MicrophoneErrorCodes: () => (/* reexport safe */ _chunk_DKXMTG56_js__WEBPACK_IMPORTED_MODULE_0__.MicrophoneErrorCodes),\n/* harmony export */   MicrophoneErrorMessage: () => (/* reexport safe */ _chunk_DKXMTG56_js__WEBPACK_IMPORTED_MODULE_0__.MicrophoneErrorMessage),\n/* harmony export */   MiniKit: () => (/* reexport safe */ _chunk_DKXMTG56_js__WEBPACK_IMPORTED_MODULE_0__.MiniKit),\n/* harmony export */   MiniKitInstallErrorCodes: () => (/* reexport safe */ _chunk_DKXMTG56_js__WEBPACK_IMPORTED_MODULE_0__.MiniKitInstallErrorCodes),\n/* harmony export */   MiniKitInstallErrorMessage: () => (/* reexport safe */ _chunk_DKXMTG56_js__WEBPACK_IMPORTED_MODULE_0__.MiniKitInstallErrorMessage),\n/* harmony export */   Network: () => (/* reexport safe */ _chunk_DKXMTG56_js__WEBPACK_IMPORTED_MODULE_0__.Network),\n/* harmony export */   PaymentErrorCodes: () => (/* reexport safe */ _chunk_DKXMTG56_js__WEBPACK_IMPORTED_MODULE_0__.PaymentErrorCodes),\n/* harmony export */   PaymentErrorMessage: () => (/* reexport safe */ _chunk_DKXMTG56_js__WEBPACK_IMPORTED_MODULE_0__.PaymentErrorMessage),\n/* harmony export */   PaymentValidationErrors: () => (/* reexport safe */ _chunk_DKXMTG56_js__WEBPACK_IMPORTED_MODULE_0__.PaymentValidationErrors),\n/* harmony export */   Permission: () => (/* reexport safe */ _chunk_DKXMTG56_js__WEBPACK_IMPORTED_MODULE_0__.Permission),\n/* harmony export */   RequestPermissionErrorCodes: () => (/* reexport safe */ _chunk_DKXMTG56_js__WEBPACK_IMPORTED_MODULE_0__.RequestPermissionErrorCodes),\n/* harmony export */   RequestPermissionErrorMessage: () => (/* reexport safe */ _chunk_DKXMTG56_js__WEBPACK_IMPORTED_MODULE_0__.RequestPermissionErrorMessage),\n/* harmony export */   ResponseEvent: () => (/* reexport safe */ _chunk_DKXMTG56_js__WEBPACK_IMPORTED_MODULE_0__.ResponseEvent),\n/* harmony export */   SendHapticFeedbackErrorCodes: () => (/* reexport safe */ _chunk_DKXMTG56_js__WEBPACK_IMPORTED_MODULE_0__.SendHapticFeedbackErrorCodes),\n/* harmony export */   SendHapticFeedbackErrorMessage: () => (/* reexport safe */ _chunk_DKXMTG56_js__WEBPACK_IMPORTED_MODULE_0__.SendHapticFeedbackErrorMessage),\n/* harmony export */   SendTransactionErrorCodes: () => (/* reexport safe */ _chunk_DKXMTG56_js__WEBPACK_IMPORTED_MODULE_0__.SendTransactionErrorCodes),\n/* harmony export */   SendTransactionErrorMessage: () => (/* reexport safe */ _chunk_DKXMTG56_js__WEBPACK_IMPORTED_MODULE_0__.SendTransactionErrorMessage),\n/* harmony export */   ShareContactsErrorCodes: () => (/* reexport safe */ _chunk_DKXMTG56_js__WEBPACK_IMPORTED_MODULE_0__.ShareContactsErrorCodes),\n/* harmony export */   ShareContactsErrorMessage: () => (/* reexport safe */ _chunk_DKXMTG56_js__WEBPACK_IMPORTED_MODULE_0__.ShareContactsErrorMessage),\n/* harmony export */   ShareFilesErrorCodes: () => (/* reexport safe */ _chunk_DKXMTG56_js__WEBPACK_IMPORTED_MODULE_0__.ShareFilesErrorCodes),\n/* harmony export */   ShareFilesErrorMessage: () => (/* reexport safe */ _chunk_DKXMTG56_js__WEBPACK_IMPORTED_MODULE_0__.ShareFilesErrorMessage),\n/* harmony export */   SignMessageErrorCodes: () => (/* reexport safe */ _chunk_DKXMTG56_js__WEBPACK_IMPORTED_MODULE_0__.SignMessageErrorCodes),\n/* harmony export */   SignMessageErrorMessage: () => (/* reexport safe */ _chunk_DKXMTG56_js__WEBPACK_IMPORTED_MODULE_0__.SignMessageErrorMessage),\n/* harmony export */   SignTypedDataErrorCodes: () => (/* reexport safe */ _chunk_DKXMTG56_js__WEBPACK_IMPORTED_MODULE_0__.SignTypedDataErrorCodes),\n/* harmony export */   SignTypedDataErrorMessage: () => (/* reexport safe */ _chunk_DKXMTG56_js__WEBPACK_IMPORTED_MODULE_0__.SignTypedDataErrorMessage),\n/* harmony export */   TokenDecimals: () => (/* reexport safe */ _chunk_DKXMTG56_js__WEBPACK_IMPORTED_MODULE_0__.TokenDecimals),\n/* harmony export */   Tokens: () => (/* reexport safe */ _chunk_DKXMTG56_js__WEBPACK_IMPORTED_MODULE_0__.Tokens),\n/* harmony export */   VerificationErrorCodes: () => (/* reexport safe */ _chunk_DKXMTG56_js__WEBPACK_IMPORTED_MODULE_0__.AppErrorCodes),\n/* harmony export */   VerificationErrorMessage: () => (/* reexport safe */ _chunk_DKXMTG56_js__WEBPACK_IMPORTED_MODULE_0__.VerificationErrorMessage),\n/* harmony export */   VerificationLevel: () => (/* reexport safe */ _worldcoin_idkit_core__WEBPACK_IMPORTED_MODULE_1__.VerificationLevel),\n/* harmony export */   WalletAuthErrorCodes: () => (/* reexport safe */ _chunk_DKXMTG56_js__WEBPACK_IMPORTED_MODULE_0__.WalletAuthErrorCodes),\n/* harmony export */   WalletAuthErrorMessage: () => (/* reexport safe */ _chunk_DKXMTG56_js__WEBPACK_IMPORTED_MODULE_0__.WalletAuthErrorMessage),\n/* harmony export */   getIsUserVerified: () => (/* binding */ getIsUserVerified),\n/* harmony export */   parseSiweMessage: () => (/* reexport safe */ _chunk_DKXMTG56_js__WEBPACK_IMPORTED_MODULE_0__.parseSiweMessage),\n/* harmony export */   tokenToDecimals: () => (/* reexport safe */ _chunk_DKXMTG56_js__WEBPACK_IMPORTED_MODULE_0__.tokenToDecimals),\n/* harmony export */   verifyCloudProof: () => (/* reexport safe */ _worldcoin_idkit_core_backend__WEBPACK_IMPORTED_MODULE_2__.verifyCloudProof),\n/* harmony export */   verifySiweMessage: () => (/* reexport safe */ _chunk_DKXMTG56_js__WEBPACK_IMPORTED_MODULE_0__.verifySiweMessage)\n/* harmony export */ });\n/* harmony import */ var _chunk_DKXMTG56_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./chunk-DKXMTG56.js */ \"(ssr)/./node_modules/@worldcoin/minikit-js/build/chunk-DKXMTG56.js\");\n/* harmony import */ var _worldcoin_idkit_core__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @worldcoin/idkit-core */ \"(ssr)/./node_modules/@worldcoin/idkit-core/build/index.js\");\n/* harmony import */ var _worldcoin_idkit_core_backend__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @worldcoin/idkit-core/backend */ \"(ssr)/./node_modules/@worldcoin/idkit-core/build/lib/backend.js\");\n/* harmony import */ var viem__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! viem */ \"(ssr)/./node_modules/viem/_esm/clients/createPublicClient.js\");\n/* harmony import */ var viem__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! viem */ \"(ssr)/./node_modules/viem/_esm/clients/transports/http.js\");\n/* harmony import */ var viem_chains__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! viem/chains */ \"(ssr)/./node_modules/viem/_esm/chains/definitions/worldchain.js\");\n\n\n// index.ts\n\n\n\n// helpers/address-book/index.ts\n\n\nvar worldIdAddressBookContractAddress = \"0x57b930D551e677CC36e2fA036Ae2fe8FdaE0330D\";\nvar addressVerifiedUntilAbi = [\n  {\n    inputs: [\n      {\n        internalType: \"address\",\n        name: \"\",\n        type: \"address\"\n      }\n    ],\n    name: \"addressVerifiedUntil\",\n    outputs: [\n      {\n        internalType: \"uint256\",\n        name: \"\",\n        type: \"uint256\"\n      }\n    ],\n    stateMutability: \"view\",\n    type: \"function\"\n  }\n];\nvar getIsUserVerified = async (walletAddress, rpcUrl) => {\n  const publicClient = (0,viem__WEBPACK_IMPORTED_MODULE_3__.createPublicClient)({\n    chain: viem_chains__WEBPACK_IMPORTED_MODULE_4__.worldchain,\n    transport: (0,viem__WEBPACK_IMPORTED_MODULE_5__.http)(\n      rpcUrl || \"https://worldchain-mainnet.g.alchemy.com/public\"\n    )\n  });\n  try {\n    const verifiedUntilResponse = await publicClient.readContract({\n      address: worldIdAddressBookContractAddress,\n      abi: addressVerifiedUntilAbi,\n      functionName: \"addressVerifiedUntil\",\n      args: [walletAddress]\n    });\n    const verifiedUntil = Number(verifiedUntilResponse.toString());\n    if (!Number.isFinite(verifiedUntil)) {\n      console.warn(\"Invalid verifiedUntil value:\", verifiedUntil);\n      return false;\n    }\n    const currentTime = Math.floor(Date.now() / 1e3);\n    return verifiedUntil > currentTime;\n  } catch (error) {\n    console.error(\"Error verifying user:\", error);\n    return false;\n  }\n};\n\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQHdvcmxkY29pbi9taW5pa2l0LWpzL2J1aWxkL2luZGV4LmpzIiwibWFwcGluZ3MiOiI7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7QUFzQzZCOztBQUU3QjtBQUMwRDtBQUduQjs7QUFFdkM7QUFDZ0Q7QUFDUDtBQUN6QztBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsdUJBQXVCLHdEQUFrQjtBQUN6QyxXQUFXLG1EQUFVO0FBQ3JCLGVBQWUsMENBQUk7QUFDbkI7QUFDQTtBQUNBLEdBQUc7QUFDSDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxLQUFLO0FBQ0w7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxJQUFJO0FBQ0o7QUFDQTtBQUNBO0FBQ0E7QUEwQ0UiLCJzb3VyY2VzIjpbIi9Vc2Vycy9ERlMtRWRpc29uL0RvY3VtZW50cy9HaXRIdWIvSGVsbG9Xb3JsZC9ub2RlX21vZHVsZXMvQHdvcmxkY29pbi9taW5pa2l0LWpzL2J1aWxkL2luZGV4LmpzIl0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7XG4gIEFwcEVycm9yQ29kZXMsXG4gIENvbW1hbmQsXG4gIEdldFBlcm1pc3Npb25zRXJyb3JDb2RlcyxcbiAgR2V0UGVybWlzc2lvbnNFcnJvck1lc3NhZ2UsXG4gIE1pY3JvcGhvbmVFcnJvckNvZGVzLFxuICBNaWNyb3Bob25lRXJyb3JNZXNzYWdlLFxuICBNaW5pS2l0LFxuICBNaW5pS2l0SW5zdGFsbEVycm9yQ29kZXMsXG4gIE1pbmlLaXRJbnN0YWxsRXJyb3JNZXNzYWdlLFxuICBOZXR3b3JrLFxuICBQYXltZW50RXJyb3JDb2RlcyxcbiAgUGF5bWVudEVycm9yTWVzc2FnZSxcbiAgUGF5bWVudFZhbGlkYXRpb25FcnJvcnMsXG4gIFBlcm1pc3Npb24sXG4gIFJlcXVlc3RQZXJtaXNzaW9uRXJyb3JDb2RlcyxcbiAgUmVxdWVzdFBlcm1pc3Npb25FcnJvck1lc3NhZ2UsXG4gIFJlc3BvbnNlRXZlbnQsXG4gIFNlbmRIYXB0aWNGZWVkYmFja0Vycm9yQ29kZXMsXG4gIFNlbmRIYXB0aWNGZWVkYmFja0Vycm9yTWVzc2FnZSxcbiAgU2VuZFRyYW5zYWN0aW9uRXJyb3JDb2RlcyxcbiAgU2VuZFRyYW5zYWN0aW9uRXJyb3JNZXNzYWdlLFxuICBTaGFyZUNvbnRhY3RzRXJyb3JDb2RlcyxcbiAgU2hhcmVDb250YWN0c0Vycm9yTWVzc2FnZSxcbiAgU2hhcmVGaWxlc0Vycm9yQ29kZXMsXG4gIFNoYXJlRmlsZXNFcnJvck1lc3NhZ2UsXG4gIFNpZ25NZXNzYWdlRXJyb3JDb2RlcyxcbiAgU2lnbk1lc3NhZ2VFcnJvck1lc3NhZ2UsXG4gIFNpZ25UeXBlZERhdGFFcnJvckNvZGVzLFxuICBTaWduVHlwZWREYXRhRXJyb3JNZXNzYWdlLFxuICBUb2tlbkRlY2ltYWxzLFxuICBUb2tlbnMsXG4gIFZlcmlmaWNhdGlvbkVycm9yTWVzc2FnZSxcbiAgV2FsbGV0QXV0aEVycm9yQ29kZXMsXG4gIFdhbGxldEF1dGhFcnJvck1lc3NhZ2UsXG4gIHBhcnNlU2l3ZU1lc3NhZ2UsXG4gIHRva2VuVG9EZWNpbWFscyxcbiAgdmVyaWZ5U2l3ZU1lc3NhZ2Vcbn0gZnJvbSBcIi4vY2h1bmstREtYTVRHNTYuanNcIjtcblxuLy8gaW5kZXgudHNcbmltcG9ydCB7IFZlcmlmaWNhdGlvbkxldmVsIH0gZnJvbSBcIkB3b3JsZGNvaW4vaWRraXQtY29yZVwiO1xuaW1wb3J0IHtcbiAgdmVyaWZ5Q2xvdWRQcm9vZlxufSBmcm9tIFwiQHdvcmxkY29pbi9pZGtpdC1jb3JlL2JhY2tlbmRcIjtcblxuLy8gaGVscGVycy9hZGRyZXNzLWJvb2svaW5kZXgudHNcbmltcG9ydCB7IGNyZWF0ZVB1YmxpY0NsaWVudCwgaHR0cCB9IGZyb20gXCJ2aWVtXCI7XG5pbXBvcnQgeyB3b3JsZGNoYWluIH0gZnJvbSBcInZpZW0vY2hhaW5zXCI7XG52YXIgd29ybGRJZEFkZHJlc3NCb29rQ29udHJhY3RBZGRyZXNzID0gXCIweDU3YjkzMEQ1NTFlNjc3Q0MzNmUyZkEwMzZBZTJmZThGZGFFMDMzMERcIjtcbnZhciBhZGRyZXNzVmVyaWZpZWRVbnRpbEFiaSA9IFtcbiAge1xuICAgIGlucHV0czogW1xuICAgICAge1xuICAgICAgICBpbnRlcm5hbFR5cGU6IFwiYWRkcmVzc1wiLFxuICAgICAgICBuYW1lOiBcIlwiLFxuICAgICAgICB0eXBlOiBcImFkZHJlc3NcIlxuICAgICAgfVxuICAgIF0sXG4gICAgbmFtZTogXCJhZGRyZXNzVmVyaWZpZWRVbnRpbFwiLFxuICAgIG91dHB1dHM6IFtcbiAgICAgIHtcbiAgICAgICAgaW50ZXJuYWxUeXBlOiBcInVpbnQyNTZcIixcbiAgICAgICAgbmFtZTogXCJcIixcbiAgICAgICAgdHlwZTogXCJ1aW50MjU2XCJcbiAgICAgIH1cbiAgICBdLFxuICAgIHN0YXRlTXV0YWJpbGl0eTogXCJ2aWV3XCIsXG4gICAgdHlwZTogXCJmdW5jdGlvblwiXG4gIH1cbl07XG52YXIgZ2V0SXNVc2VyVmVyaWZpZWQgPSBhc3luYyAod2FsbGV0QWRkcmVzcywgcnBjVXJsKSA9PiB7XG4gIGNvbnN0IHB1YmxpY0NsaWVudCA9IGNyZWF0ZVB1YmxpY0NsaWVudCh7XG4gICAgY2hhaW46IHdvcmxkY2hhaW4sXG4gICAgdHJhbnNwb3J0OiBodHRwKFxuICAgICAgcnBjVXJsIHx8IFwiaHR0cHM6Ly93b3JsZGNoYWluLW1haW5uZXQuZy5hbGNoZW15LmNvbS9wdWJsaWNcIlxuICAgIClcbiAgfSk7XG4gIHRyeSB7XG4gICAgY29uc3QgdmVyaWZpZWRVbnRpbFJlc3BvbnNlID0gYXdhaXQgcHVibGljQ2xpZW50LnJlYWRDb250cmFjdCh7XG4gICAgICBhZGRyZXNzOiB3b3JsZElkQWRkcmVzc0Jvb2tDb250cmFjdEFkZHJlc3MsXG4gICAgICBhYmk6IGFkZHJlc3NWZXJpZmllZFVudGlsQWJpLFxuICAgICAgZnVuY3Rpb25OYW1lOiBcImFkZHJlc3NWZXJpZmllZFVudGlsXCIsXG4gICAgICBhcmdzOiBbd2FsbGV0QWRkcmVzc11cbiAgICB9KTtcbiAgICBjb25zdCB2ZXJpZmllZFVudGlsID0gTnVtYmVyKHZlcmlmaWVkVW50aWxSZXNwb25zZS50b1N0cmluZygpKTtcbiAgICBpZiAoIU51bWJlci5pc0Zpbml0ZSh2ZXJpZmllZFVudGlsKSkge1xuICAgICAgY29uc29sZS53YXJuKFwiSW52YWxpZCB2ZXJpZmllZFVudGlsIHZhbHVlOlwiLCB2ZXJpZmllZFVudGlsKTtcbiAgICAgIHJldHVybiBmYWxzZTtcbiAgICB9XG4gICAgY29uc3QgY3VycmVudFRpbWUgPSBNYXRoLmZsb29yKERhdGUubm93KCkgLyAxZTMpO1xuICAgIHJldHVybiB2ZXJpZmllZFVudGlsID4gY3VycmVudFRpbWU7XG4gIH0gY2F0Y2ggKGVycm9yKSB7XG4gICAgY29uc29sZS5lcnJvcihcIkVycm9yIHZlcmlmeWluZyB1c2VyOlwiLCBlcnJvcik7XG4gICAgcmV0dXJuIGZhbHNlO1xuICB9XG59O1xuZXhwb3J0IHtcbiAgQ29tbWFuZCxcbiAgR2V0UGVybWlzc2lvbnNFcnJvckNvZGVzLFxuICBHZXRQZXJtaXNzaW9uc0Vycm9yTWVzc2FnZSxcbiAgTWljcm9waG9uZUVycm9yQ29kZXMsXG4gIE1pY3JvcGhvbmVFcnJvck1lc3NhZ2UsXG4gIE1pbmlLaXQsXG4gIE1pbmlLaXRJbnN0YWxsRXJyb3JDb2RlcyxcbiAgTWluaUtpdEluc3RhbGxFcnJvck1lc3NhZ2UsXG4gIE5ldHdvcmssXG4gIFBheW1lbnRFcnJvckNvZGVzLFxuICBQYXltZW50RXJyb3JNZXNzYWdlLFxuICBQYXltZW50VmFsaWRhdGlvbkVycm9ycyxcbiAgUGVybWlzc2lvbixcbiAgUmVxdWVzdFBlcm1pc3Npb25FcnJvckNvZGVzLFxuICBSZXF1ZXN0UGVybWlzc2lvbkVycm9yTWVzc2FnZSxcbiAgUmVzcG9uc2VFdmVudCxcbiAgU2VuZEhhcHRpY0ZlZWRiYWNrRXJyb3JDb2RlcyxcbiAgU2VuZEhhcHRpY0ZlZWRiYWNrRXJyb3JNZXNzYWdlLFxuICBTZW5kVHJhbnNhY3Rpb25FcnJvckNvZGVzLFxuICBTZW5kVHJhbnNhY3Rpb25FcnJvck1lc3NhZ2UsXG4gIFNoYXJlQ29udGFjdHNFcnJvckNvZGVzLFxuICBTaGFyZUNvbnRhY3RzRXJyb3JNZXNzYWdlLFxuICBTaGFyZUZpbGVzRXJyb3JDb2RlcyxcbiAgU2hhcmVGaWxlc0Vycm9yTWVzc2FnZSxcbiAgU2lnbk1lc3NhZ2VFcnJvckNvZGVzLFxuICBTaWduTWVzc2FnZUVycm9yTWVzc2FnZSxcbiAgU2lnblR5cGVkRGF0YUVycm9yQ29kZXMsXG4gIFNpZ25UeXBlZERhdGFFcnJvck1lc3NhZ2UsXG4gIFRva2VuRGVjaW1hbHMsXG4gIFRva2VucyxcbiAgQXBwRXJyb3JDb2RlcyBhcyBWZXJpZmljYXRpb25FcnJvckNvZGVzLFxuICBWZXJpZmljYXRpb25FcnJvck1lc3NhZ2UsXG4gIFZlcmlmaWNhdGlvbkxldmVsLFxuICBXYWxsZXRBdXRoRXJyb3JDb2RlcyxcbiAgV2FsbGV0QXV0aEVycm9yTWVzc2FnZSxcbiAgZ2V0SXNVc2VyVmVyaWZpZWQsXG4gIHBhcnNlU2l3ZU1lc3NhZ2UsXG4gIHRva2VuVG9EZWNpbWFscyxcbiAgdmVyaWZ5Q2xvdWRQcm9vZixcbiAgdmVyaWZ5U2l3ZU1lc3NhZ2Vcbn07XG4iXSwibmFtZXMiOltdLCJpZ25vcmVMaXN0IjpbMF0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@worldcoin/minikit-js/build/index.js\n");

/***/ })

};
;